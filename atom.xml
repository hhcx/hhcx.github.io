<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Morning Star&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.mls-tech.info/"/>
  <updated>2022-12-13T00:15:54.140Z</updated>
  <id>https://www.mls-tech.info/</id>
  
  <author>
    <name>Morning Star</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CKA 备考 - 2 - 扩展一个应用的实例数</title>
    <link href="https://www.mls-tech.info/microservice/k8s/kubernetes-cka-preparation-02-scale-app/"/>
    <id>https://www.mls-tech.info/microservice/k8s/kubernetes-cka-preparation-02-scale-app/</id>
    <published>2022-12-13T00:05:31.000Z</published>
    <updated>2022-12-13T00:15:54.140Z</updated>
    
    <content type="html"><![CDATA[<p>通过分析实操题来学习、巩固cka中的考点。本次的重点是用Scale命令扩展一个应用的实例数。</p><a id="more"></a><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>将<a href="/microservice/k8s/kubernetes-cka-preparation-01-deploy-app/" title="CKA 备考 - 1 - 建立一个Deloyment并显示状态">CKA 备考 - 1 - 建立一个Deloyment并显示状态</a>中建立的Pod的运行实例数扩展到5个, 完成后检查 Deployment 的 Rollout 状态和检查Pod的运行状态。</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><h3 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h3><p>本题的核心就是考kubernetes的应用伸缩能力。为方便对应用的处理能力进行横向伸缩，kubernetes提供了scale命令，该命令提供了<strong>手动</strong>对Deployment、ReplicaSet、Replication Controller或 Job 进行横向伸缩的功能。执行后具体的效果就是对应的Pod数量增加或减少（相对于执行scale命令之前）。</p><h3 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h3><p>本题需要熟练掌握的命令是 kubectl scale， 具体的参数不用记，通过 help 可以现场查看，例如:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl scale --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>系统将显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">Set a new size <span class="keyword">for</span> a deployment, replica <span class="built_in">set</span>, replication controller, or stateful <span class="built_in">set</span>.</span><br><span class="line"></span><br><span class="line"> Scale also allows users to specify one or more preconditions <span class="keyword">for</span> the scale action.</span><br><span class="line"></span><br><span class="line"> If --current-replicas or --resource-version is specified, it is validated before the scale is attempted, and it is</span><br><span class="line">guaranteed that the precondition holds <span class="literal">true</span> when the scale is sent to the server.</span><br><span class="line"></span><br><span class="line">Examples:</span><br><span class="line">  <span class="comment"># Scale a replica set named 'foo' to 3</span></span><br><span class="line">  kubectl scale --replicas=3 rs/foo</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Scale a resource identified by type and name specified in "foo.yaml" to 3</span></span><br><span class="line">  kubectl scale --replicas=3 -f foo.yaml</span><br><span class="line"></span><br><span class="line">  <span class="comment"># If the deployment named mysql's current size is 2, scale mysql to 3</span></span><br><span class="line">  kubectl scale --current-replicas=2 --replicas=3 deployment/mysql</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Scale multiple replication controllers</span></span><br><span class="line">  kubectl scale --replicas=5 rc/foo rc/bar rc/baz</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Scale stateful set named 'web' to 3</span></span><br><span class="line">  kubectl scale --replicas=3 statefulset/web</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">      --all=<span class="literal">false</span>: Select all resources <span class="keyword">in</span> the namespace of the specified resource types</span><br><span class="line">      --allow-missing-template-keys=<span class="literal">true</span>: If <span class="literal">true</span>, ignore any errors <span class="keyword">in</span> templates when a field or map key is missing <span class="keyword">in</span></span><br><span class="line">the template. Only applies to golang and jsonpath output formats.</span><br><span class="line">      --current-replicas=-1: Precondition <span class="keyword">for</span> current size. Requires that the current size of the resource match this</span><br><span class="line">value <span class="keyword">in</span> order to scale. -1 (default) <span class="keyword">for</span> no condition.</span><br><span class="line">      --dry-run=<span class="string">'none'</span>: Must be <span class="string">"none"</span>, <span class="string">"server"</span>, or <span class="string">"client"</span>. If client strategy, only <span class="built_in">print</span> the object that would be</span><br><span class="line">sent, without sending it. If server strategy, submit server-side request without persisting the resource.</span><br><span class="line">  -f, --filename=[]: Filename, directory, or URL to files identifying the resource to <span class="built_in">set</span> a new size</span><br><span class="line">  -k, --kustomize=<span class="string">''</span>: Process the kustomization directory. This flag can<span class="string">'t be used together with -f or -R.</span></span><br><span class="line"><span class="string">  -o, --output='</span><span class="string">': Output format. One of:</span></span><br><span class="line"><span class="string">json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file.</span></span><br><span class="line"><span class="string">  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage</span></span><br><span class="line"><span class="string">related manifests organized within the same directory.</span></span><br><span class="line"><span class="string">      --replicas=0: The new desired number of replicas. Required.</span></span><br><span class="line"><span class="string">      --resource-version='</span><span class="string">': Precondition for resource version. Requires that the current resource version match this</span></span><br><span class="line"><span class="string">value in order to scale.</span></span><br><span class="line"><span class="string">  -l, --selector='</span><span class="string">': Selector (label query) to filter on, supports '</span>=<span class="string">', '</span>==<span class="string">', and '</span>!=<span class="string">'.(e.g. -l key1=value1,key2=value2)</span></span><br><span class="line"><span class="string">      --show-managed-fields=false: If true, keep the managedFields when printing objects in JSON or YAML format.</span></span><br><span class="line"><span class="string">      --template='</span><span class="string">': Template string or path to template file to use when -o=go-template, -o=go-template-file. The</span></span><br><span class="line"><span class="string">template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].</span></span><br><span class="line"><span class="string">      --timeout=0s: The length of time to wait before giving up on a scale operation, zero means don'</span>t <span class="built_in">wait</span>. Any other</span><br><span class="line">values should contain a corresponding time unit (e.g. 1s, 2m, 3h).</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  kubectl scale [--resource-version=version] [--current-replicas=count] --replicas=COUNT (-f FILENAME | TYPE NAME)</span><br><span class="line">[options]</span><br><span class="line"></span><br><span class="line">Use <span class="string">"kubectl options"</span> <span class="keyword">for</span> a list of global <span class="built_in">command</span>-line options (applies to all commands).</span><br></pre></td></tr></table></figure><h2 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h2><p>在本题中，我们使用扩展 deployment 的方法，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl scale --replicas=5 deployment/my-dep</span><br></pre></td></tr></table></figure><p>my-dep 是在 <a href="/microservice/k8s/kubernetes-cka-preparation-01-deploy-app/" title="CKA 备考 - 1 - 建立一个Deloyment并显示状态">CKA 备考 - 1 - 建立一个Deloyment并显示状态</a> 练习中建立的 Deployment。</p><p>执行后系统显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deployment.apps/my-dep scaled</span><br></pre></td></tr></table></figure><p>现在，查看Pod列表系统显示类似如下的信息:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">NAME                      READY   STATUS    RESTARTS   AGE</span><br><span class="line">my-dep-655995c9d4-2rr72   1/1     Running   0          55m</span><br><span class="line">my-dep-655995c9d4-4gknh   1/1     Running   0          55m</span><br><span class="line">my-dep-655995c9d4-6x66r   1/1     Running   0          37s</span><br><span class="line">my-dep-655995c9d4-mtqwb   1/1     Running   0          36s</span><br><span class="line">my-dep-655995c9d4-pz849   1/1     Running   0          55m</span><br></pre></td></tr></table></figure><p>可以看到对应的Pod数量已经增加到5个。</p><p>再查看rollout状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl rollout status deployment/my-dep</span><br></pre></td></tr></table></figure><p>或是查看rollout版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl rollout <span class="built_in">history</span> deployment/my-dep</span><br></pre></td></tr></table></figure><p><strong>通过观察可以看到，伸缩应用不会影响rollout的状态</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过分析实操题来学习、巩固cka中的考点。本次的重点是用Scale命令扩展一个应用的实例数。&lt;/p&gt;
    
    </summary>
    
      <category term="microservice" scheme="https://www.mls-tech.info/categories/microservice/"/>
    
      <category term="Kubernetes" scheme="https://www.mls-tech.info/categories/microservice/kubernetes/"/>
    
    
      <category term="microservice" scheme="https://www.mls-tech.info/tags/microservice/"/>
    
      <category term="k8s" scheme="https://www.mls-tech.info/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>CKA 备考 - 1 - 建立一个Deloyment并显示状态</title>
    <link href="https://www.mls-tech.info/microservice/k8s/kubernetes-cka-preparation-01-deploy-app/"/>
    <id>https://www.mls-tech.info/microservice/k8s/kubernetes-cka-preparation-01-deploy-app/</id>
    <published>2022-12-12T01:31:19.000Z</published>
    <updated>2022-12-13T00:15:54.140Z</updated>
    
    <content type="html"><![CDATA[<p>通过分析实操题来学习、巩固cka中的考点。本次的重点是建立Deployment。</p><a id="more"></a><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>使用 nginx:1.16 镜像建立一个名为 nginx-deploy 的 Deployment，本次部署需要三个实例。部署完成后检查 Deployment 的 Rollout 状态和检查POD的运行状态。</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><h3 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h3><p>该题考的Kubernetes中应用发布的概念机基本命令。 在 Kuberernete 中，与发布应用相关的最基本、最重要的概念是: Deployment 和 ReplicaSet。</p><ol><li>Deployment</li></ol><p>Deploymnet 在Kubernetes 中是一个比 Pod 更抽象的管理对象，它解决了 Pod 自身没有自愈能力，不能扩缩容，也不支持方便的升级和回滚的问题。一个 Deployment 对象只能管理一个Pod模板，但可以有多个Pod的副本。</p><ol start="2"><li>ReplicaSet</li></ol><p>简单来说，Deployment使用ReplicaSet来提供Pod自愈和扩缩容能力。</p><p>总结一下: 一个Deployment包含一个ReplicaSet; 一个ReplicaSet包含一个Pod模板, 但可以设定多个Pod的实例。</p><ol start="3"><li>Rollout</li></ol><p>对资源进行管理, 能够管理的资源包括: deployments 和 daemonsets</p><p>提供的子命令包括<br>a. history - 查看历史版本<br>b. pause - 暂停资源<br>c. resume - 恢复暂停资源<br>d. status - 查看资源状态<br>e. undo - 回滚版本</p><h3 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h3><ol><li>create deployment命令</li></ol><p>平时工作中，处理这样的问题可能更多的会采用编辑yaml文件，然后通过 kubectl apply 命令应用到集群中的方法来处理。但在考试中，对于这样简单的题目，最好自己采用命令的方式。准备考试前，不需要记住命令的所有参数，只需要记住使用那个命令，具体参数的写法可以通过help来查找。比如这道题，使用 kubectl create deployment 命令，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create deployment --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>可以看到系统显示如下信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">Create a deployment with the specified name.</span><br><span class="line"></span><br><span class="line">Aliases:</span><br><span class="line">deployment, deploy</span><br><span class="line"></span><br><span class="line">Examples:</span><br><span class="line">  <span class="comment"># Create a deployment named my-dep that runs the busybox image</span></span><br><span class="line">  kubectl create deployment my-dep --image=busybox</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Create a deployment with a command</span></span><br><span class="line">  kubectl create deployment my-dep --image=busybox -- date</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Create a deployment named my-dep that runs the nginx image with 3 replicas</span></span><br><span class="line">  kubectl create deployment my-dep --image=nginx --replicas=3</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Create a deployment named my-dep that runs the busybox image and expose port 5701</span></span><br><span class="line">  kubectl create deployment my-dep --image=busybox --port=5701</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">      --allow-missing-template-keys=<span class="literal">true</span>: If <span class="literal">true</span>, ignore any errors <span class="keyword">in</span> templates when a field or map key is missing <span class="keyword">in</span></span><br><span class="line">the template. Only applies to golang and jsonpath output formats.</span><br><span class="line">      --dry-run=<span class="string">'none'</span>: Must be <span class="string">"none"</span>, <span class="string">"server"</span>, or <span class="string">"client"</span>. If client strategy, only <span class="built_in">print</span> the object that would be</span><br><span class="line">sent, without sending it. If server strategy, submit server-side request without persisting the resource.</span><br><span class="line">      --field-manager=<span class="string">'kubectl-create'</span>: Name of the manager used to track field ownership.</span><br><span class="line">      --image=[]: Image names to run.</span><br><span class="line">  -o, --output=<span class="string">''</span>: Output format. One of:</span><br><span class="line">json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file.</span><br><span class="line">      --port=-1: The port that this container exposes.</span><br><span class="line">  -r, --replicas=1: Number of replicas to create. Default is 1.</span><br><span class="line">      --save-config=<span class="literal">false</span>: If <span class="literal">true</span>, the configuration of current object will be saved <span class="keyword">in</span> its annotation. Otherwise, the</span><br><span class="line">annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object <span class="keyword">in</span> the future.</span><br><span class="line">      --show-managed-fields=<span class="literal">false</span>: If <span class="literal">true</span>, keep the managedFields when printing objects <span class="keyword">in</span> JSON or YAML format.</span><br><span class="line">      --template=<span class="string">''</span>: Template string or path to template file to use when -o=go-template, -o=go-template-file. The</span><br><span class="line">template format is golang templates [http://golang.org/pkg/text/template/<span class="comment">#pkg-overview].</span></span><br><span class="line">      --validate=<span class="literal">true</span>: If <span class="literal">true</span>, use a schema to validate the input before sending it</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  kubectl create deployment NAME --image=image -- [COMMAND] [args...] [options]</span><br><span class="line"></span><br><span class="line">Use <span class="string">"kubectl options"</span> <span class="keyword">for</span> a list of global <span class="built_in">command</span>-line options (applies to all commands).</span><br></pre></td></tr></table></figure><p><strong>实际上这道题需要的命令已经完整的列出来了，稍加改动就i可以直接使用</strong></p><ol start="2"><li>rollout 命令</li></ol><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl rollout --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>可以看到以下信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Manage the rollout of a resource.</span><br><span class="line"></span><br><span class="line"> Valid resource types include:</span><br><span class="line"></span><br><span class="line">  *  deployments</span><br><span class="line">  *  daemonsets</span><br><span class="line">  *  statefulsets</span><br><span class="line"></span><br><span class="line">Examples:</span><br><span class="line">  <span class="comment"># Rollback to the previous deployment</span></span><br><span class="line">  kubectl rollout undo deployment/abc</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Check the rollout status of a daemonset</span></span><br><span class="line">  kubectl rollout status daemonset/foo</span><br><span class="line"></span><br><span class="line">Available Commands:</span><br><span class="line">  <span class="built_in">history</span>     View rollout <span class="built_in">history</span></span><br><span class="line">  pause       Mark the provided resource as paused</span><br><span class="line">  restart     Restart a resource</span><br><span class="line">  resume      Resume a paused resource</span><br><span class="line">  status      Show the status of the rollout</span><br><span class="line">  undo        Undo a previous rollout</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  kubectl rollout SUBCOMMAND [options]</span><br><span class="line"></span><br><span class="line">Use <span class="string">"kubectl &lt;command&gt; --help"</span> <span class="keyword">for</span> more information about a given <span class="built_in">command</span>.</span><br><span class="line">Use <span class="string">"kubectl options"</span> <span class="keyword">for</span> a list of global <span class="built_in">command</span>-line options (applies to all commands).</span><br></pre></td></tr></table></figure><h2 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h2><ol><li>在终端输入以下命令建立 Deployment</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create deployment my-dep --image=nginx:1.16 --replicas=3</span><br></pre></td></tr></table></figure><p>执行完成后，生成一个名为 my-dep 的 Deployment 对象。能够xi’t显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deployment.apps/my-dep created</span><br></pre></td></tr></table></figure><ol start="2"><li>检查 Pod 状态</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod</span><br></pre></td></tr></table></figure><p>系统显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">NAME                      READY   STATUS    RESTARTS   AGE</span><br><span class="line">my-dep-655995c9d4-2rr72   1/1     Running   0          75s</span><br><span class="line">my-dep-655995c9d4-4gknh   1/1     Running   0          75s</span><br><span class="line">my-dep-655995c9d4-pz849   1/1     Running   0          75s</span><br></pre></td></tr></table></figure><p>刚开始，pod可能会处于ContainerCreating状态， 一般是因为下载nginx镜像需要些时间，下载完就好了。</p><ol start="3"><li>检查 Rollout 状态</li></ol><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl rollout status deployment my-dep</span><br></pre></td></tr></table></figure><p>系统显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deployment <span class="string">"my-dep"</span> successfully rolled out</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过分析实操题来学习、巩固cka中的考点。本次的重点是建立Deployment。&lt;/p&gt;
    
    </summary>
    
      <category term="microservice" scheme="https://www.mls-tech.info/categories/microservice/"/>
    
      <category term="Kubernetes" scheme="https://www.mls-tech.info/categories/microservice/kubernetes/"/>
    
    
      <category term="microservice" scheme="https://www.mls-tech.info/tags/microservice/"/>
    
      <category term="k8s" scheme="https://www.mls-tech.info/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>使用基于Vmware的Centos7虚拟机搭建Ceph单节点集群</title>
    <link href="https://www.mls-tech.info/ceph/ceph-setup-single-node-cluster-on-centos-vmware/"/>
    <id>https://www.mls-tech.info/ceph/ceph-setup-single-node-cluster-on-centos-vmware/</id>
    <published>2022-12-10T11:42:51.000Z</published>
    <updated>2022-12-11T03:59:06.940Z</updated>
    
    <content type="html"><![CDATA[<p>为方便大家快速上手Ceph，我制作了一个基于Vmware的虚拟机，安装了CentOS 7.9系统并完成了一些按照Ceph必须完成的设置，包括关闭了防火墙及SELinux等。你只需要按照本文中的几个步骤就可以轻松的搭建一个扩扩展的单节点Ceph集群。</p><a id="more"></a><h2 id="下载镜像并建立虚拟机"><a href="#下载镜像并建立虚拟机" class="headerlink" title="下载镜像并建立虚拟机"></a>下载镜像并建立虚拟机</h2><p>从百度网盘或是移动云盘下载镜像</p><ol><li><p>百度网盘下载地址<br>链接：<a href="https://pan.baidu.com/s/1VWqeA1ldpyfJDdNvNCL4xA" rel="external nofollow noopener noreferrer" target="_blank">https://pan.baidu.com/s/1VWqeA1ldpyfJDdNvNCL4xA</a><br>提取码：zj2p</p></li><li><p>移动云盘下载地址</p></li></ol><p>链接: <a href="https://caiyun.139.com/m/i?0m5CMSWoSKbbB" rel="external nofollow noopener noreferrer" target="_blank">https://caiyun.139.com/m/i?0m5CMSWoSKbbB</a><br>提取码:4jfx</p><p>下载后解压，是ovf格式的虚拟机镜像，在 vmware 中导入，完成后开机并登录</p><p>登录用户为: stu<br>登录密码为: Password.123</p><p>接下来就可以开始配置 ceph 单节点集群环境了。</p><h2 id="网络设置"><a href="#网络设置" class="headerlink" title="网络设置"></a>网络设置</h2><h3 id="设置静态IP"><a href="#设置静态IP" class="headerlink" title="设置静态IP"></a>设置静态IP</h3><p>虚拟机默认采用的是桥接网络，为了便于后续的集群扩展，最好设置为静态IP。</p><p>登录到系统中，编辑 /etc/sysconfig/network-scripts/ifcfg-ens160</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/sysconfig/network-scripts/ifcfg-ens160</span><br></pre></td></tr></table></figure><p>用你实际环境中的信息替换下面的几项网络设置:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IPADDR=<span class="string">"192.168.3.92"</span></span><br><span class="line">NETWORK=<span class="string">"255.255.255.0"</span></span><br><span class="line">GATEWAY=<span class="string">"192.168.3.1"</span></span><br></pre></td></tr></table></figure><p>保存文件后重启网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service network restart</span><br></pre></td></tr></table></figure><h3 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h3><p>我们将集群中的第一台主机的名称设置为: ceph-01, 执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hostnamectl <span class="built_in">set</span>-hostname ceph-01</span><br></pre></td></tr></table></figure><h3 id="修改hosts文件"><a href="#修改hosts文件" class="headerlink" title="修改hosts文件"></a>修改hosts文件</h3><p>修改hosts文件，执行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/hosts</span><br></pre></td></tr></table></figure><p>添加ceph-01到文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.3.92  ceph-01</span><br></pre></td></tr></table></figure><p><strong>注意: 用你实际环境的IP替换上面的192.168.3.92</strong></p><h2 id="安全设置"><a href="#安全设置" class="headerlink" title="安全设置"></a>安全设置</h2><p>用 ansible 安装 ceph 集群时，需要 ansible 的进程需要能够通过无密码的方式ssh到安装机（基本是单机版本也需要完成这个步骤）。</p><h3 id="设置登录密钥"><a href="#设置登录密钥" class="headerlink" title="设置登录密钥"></a>设置登录密钥</h3><p>使用ssh-keygen为当前用户(stu)生成ssh key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>如果提示已经存在，是否覆盖老的文件，选择”y”, 其它全部使用默认设置，完成后，系统将显示类似如下的信息:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/home/stu/.ssh/id_rsa):</span><br><span class="line">Created directory <span class="string">'/home/stu/.ssh'</span>.</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /home/stu/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /home/stu/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:lKE3BBI6eJy2lSkpxfGEn8CjFMMsplZ2HO8bTh3OxDU stu@c-node00</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|o=+o=oo.o  E     |</span></span><br><span class="line"><span class="string">|.OBO *.o.o. .    |</span></span><br><span class="line"><span class="string">|B.%+*...=+       |</span></span><br><span class="line"><span class="string">|o= =o .o=..      |</span></span><br><span class="line"><span class="string">|. .    +S+       |</span></span><br><span class="line"><span class="string">|      o o        |</span></span><br><span class="line"><span class="string">|       o         |</span></span><br><span class="line"><span class="string">|                 |</span></span><br><span class="line"><span class="string">|                 |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure><p>将密钥复制到其它节点，包括ceph-01本身（因为在单节点安装中 ceph-01既是部署机也是ceph节点机）。</p><p>以复制到 ceph-01 为例，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id ceph-01</span><br></pre></td></tr></table></figure><p>根据提示输入stu的密码，完成后系统会显示类似如下的信息:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: <span class="string">"/home/stu/.ssh/id_rsa.pub"</span></span><br><span class="line">/usr/bin/ssh-copy-id: INFO: attempting to <span class="built_in">log</span> <span class="keyword">in</span> with the new key(s), to filter out any that are already installed</span><br><span class="line">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- <span class="keyword">if</span> you are prompted now it is to install the new keys</span><br><span class="line">stu@ceph-01<span class="string">'s password:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Number of key(s) added: 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Now try logging into the machine, with:   "ssh '</span>ceph-01<span class="string">'"</span></span><br><span class="line"><span class="string">and check to make sure that only the key(s) you wanted were added.</span></span><br></pre></td></tr></table></figure><p>验证 ssh 能过无密码登录，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh ceph-01</span><br></pre></td></tr></table></figure><p>如果能正常登录，得到类似如下的信息:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Last login: Sun Dec 11 03:58:03 2022 from 192.168.3.83</span><br></pre></td></tr></table></figure><p><strong>注意：验证成功后要执行 exit 命令从 ssh 会话中退出</strong></p><h2 id="安装和配置-ceph-ansible"><a href="#安装和配置-ceph-ansible" class="headerlink" title="安装和配置 ceph-ansible"></a>安装和配置 ceph-ansible</h2><p>我在虚拟机里面已经准备了 ceph-ansible 的安装文件和一些为搭建单节点集群的配置文件，你不需要再复制文件或是下载文件到虚拟机中。</p><p>ceph-ansible 的安装文件就放在 /home/stu 目录中，文件名为 ceph-ansible-4.0.5.tar.gz</p><p>解压该文件在当前目录（/home/stu)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf ceph-ansible-4.0.45.tar.gz</span><br></pre></td></tr></table></figure><p>解压后将目录改名为 ceph-ansible</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv ceph-ansible-4.0.45 ceph-ansible</span><br></pre></td></tr></table></figure><p>这时执行 ls 命令，你应该看到目录中包含以下5个文件和目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">all.yml  ceph-ansible  ceph-ansible-4.0.45.tar.gz  osds.yml  site.yml</span><br></pre></td></tr></table></figure><p>接下来，将 site.yml 复制到 ceph-ansible 目录中， all.yml, osds.yml 复制到 ceph-ansible/group_vars 目录中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp site.yml ceph-ansible</span><br><span class="line">cp all.yml ceph-ansible/group_vars</span><br><span class="line">cp osds.yml ceph-ansible/group_vars</span><br></pre></td></tr></table></figure><p>最后，按实际情况修改这些配置文件</p><p>首先，进入 ceph-ansible 目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ceph-ansible</span><br></pre></td></tr></table></figure><ol><li>group_vars/all.yml 文件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi group_vars/all.yml</span><br></pre></td></tr></table></figure><p>对于该文件, 需要修改两项: public_network 和 monitor_interface, 找到并替换为下面的内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">monitor_interface: ens160</span><br><span class="line">public_network: 192.168.3.0/24</span><br></pre></td></tr></table></figure><p><strong>注意: 用你的实际网络配置替换 192.168.3.0/24</strong></p><h2 id="配置-ansible"><a href="#配置-ansible" class="headerlink" title="配置 ansible"></a>配置 ansible</h2><p>编辑 /etc/ansible/hosts 文件，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/ansible/hosts</span><br></pre></td></tr></table></figure><p>添加如下的内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[mons]</span><br><span class="line">ceph-01</span><br><span class="line"></span><br><span class="line">[osds]</span><br><span class="line">ceph-01</span><br><span class="line"></span><br><span class="line">[clients]</span><br><span class="line">ceph-01</span><br><span class="line"></span><br><span class="line">[grafana-server]</span><br><span class="line">ceph-01</span><br></pre></td></tr></table></figure><p>保存以后，可以运行以下命令进行验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m ping</span><br></pre></td></tr></table></figure><p>如果得到类似如下的信息，则说明配置正确 ansible 能正常运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ceph-01 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"ping"</span>: <span class="string">"pong"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>按照一个ceph-ansible的python依赖库和软件</p><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install python-netaddr -y</span><br></pre></td></tr></table></figure><p>按照ceph-ansible项目的依赖, <strong>执行前确保在 ceph-ansible 目录中</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><p>万事俱备，开始部署，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -i /etc/ansible/hosts site.yml</span><br></pre></td></tr></table></figure><p>根据机器性能和网速的不同，这个过程可能要几分钟到二十分钟左右。 如果看到系统显示类似如下的信息则说明按照成功:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">ok: [ceph-01 -&gt; ceph-01] =&gt;</span><br><span class="line">  msg:</span><br><span class="line">  - <span class="string">'  cluster:'</span></span><br><span class="line">  - <span class="string">'    id:     371d876a-2a90-44e4-af1e-dcc77d7c0f52'</span></span><br><span class="line">  - <span class="string">'    health: HEALTH_WARN'</span></span><br><span class="line">  - <span class="string">'            mon is allowing insecure global_id reclaim'</span></span><br><span class="line">  - <span class="string">' '</span></span><br><span class="line">  - <span class="string">'  services:'</span></span><br><span class="line">  - <span class="string">'    mon: 1 daemons, quorum ceph-01 (age 14m)'</span></span><br><span class="line">  - <span class="string">'    mgr: ceph-01(active, since 9s)'</span></span><br><span class="line">  - <span class="string">'    osd: 3 osds: 3 up (since 14m), 3 in (since 38h)'</span></span><br><span class="line">  - <span class="string">' '</span></span><br><span class="line">  - <span class="string">'  data:'</span></span><br><span class="line">  - <span class="string">'    pools:   0 pools, 0 pgs'</span></span><br><span class="line">  - <span class="string">'    objects: 0 objects, 0 B'</span></span><br><span class="line">  - <span class="string">'    usage:   3.0 GiB used, 27 GiB / 30 GiB avail'</span></span><br><span class="line">  - <span class="string">'    pgs:     '</span></span><br><span class="line">  - <span class="string">' '</span></span><br><span class="line"></span><br><span class="line">PLAY RECAP *************************************************************************************************************</span><br><span class="line">ceph-01                    : ok=464  changed=21   unreachable=0    failed=0    skipped=607  rescued=0    ignored=0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">INSTALLER STATUS *******************************************************************************************************</span><br><span class="line">Install Ceph Monitor           : Complete (0:00:35)</span><br><span class="line">Install Ceph OSD               : Complete (0:00:39)</span><br><span class="line">Install Ceph Client            : Complete (0:00:23)</span><br><span class="line">Install Ceph Dashboard         : Complete (0:00:55)</span><br><span class="line">Install Ceph Grafana           : Complete (0:00:44)</span><br><span class="line">Install Ceph Node Exporter     : Complete (0:00:21)</span><br><span class="line"></span><br><span class="line">Sunday 11 December 2022  11:24:43 +0800 (0:00:00.084)       0:05:54.138 *******</span><br><span class="line">===============================================================================</span><br><span class="line">ceph-infra : install firewalld python binding ------------------------------------------------------------------ 65.21s</span><br><span class="line">ceph-common : configure red hat ceph community repository stable key ------------------------------------------- 11.23s</span><br><span class="line">ceph-grafana : <span class="built_in">wait</span> <span class="keyword">for</span> grafana to start ------------------------------------------------------------------------ 5.68s</span><br><span class="line">ceph-dashboard : check <span class="keyword">if</span> dashboard admin user exists ----------------------------------------------------------- 3.36s</span><br><span class="line">check <span class="keyword">for</span> python ------------------------------------------------------------------------------------------------ 3.16s</span><br><span class="line">ceph-config : look up <span class="keyword">for</span> ceph-volume rejected devices ---------------------------------------------------------- 2.48s</span><br><span class="line">ceph-config : look up <span class="keyword">for</span> ceph-volume rejected devices ---------------------------------------------------------- 2.47s</span><br><span class="line">gather facts ---------------------------------------------------------------------------------------------------- 2.23s</span><br><span class="line">ceph-dashboard : copy self-signed generated certificate on mons ------------------------------------------------- 2.23s</span><br><span class="line">ceph-osd : use ceph-volume lvm batch to create bluestore osds --------------------------------------------------- 2.22s</span><br><span class="line">ceph-config : look up <span class="keyword">for</span> ceph-volume rejected devices ---------------------------------------------------------- 2.17s</span><br><span class="line">ceph-osd : apply operating system tuning ------------------------------------------------------------------------ 2.15s</span><br><span class="line">ceph-prometheus : ship systemd services ------------------------------------------------------------------------- 2.09s</span><br><span class="line">ceph-dashboard : <span class="built_in">disable</span> mgr dashboard module (restart) --------------------------------------------------------- 2.05s</span><br><span class="line">ceph-dashboard : <span class="built_in">enable</span> mgr dashboard module (restart) ---------------------------------------------------------- 2.03s</span><br><span class="line">ceph-dashboard : <span class="built_in">enable</span> mgr dashboard module (restart) ---------------------------------------------------------- 2.02s</span><br><span class="line">ceph-osd : systemd start osd ------------------------------------------------------------------------------------ 1.85s</span><br><span class="line">ceph-dashboard : update dashboard admin password ---------------------------------------------------------------- 1.73s</span><br><span class="line">ceph-grafana : make sure grafana configuration directories exist ------------------------------------------------ 1.69s</span><br><span class="line">ceph-container-engine : install container packages -------------------------------------------------------------- 1.65s</span><br></pre></td></tr></table></figure><p>部署完成后，也可以在本机（非虚拟机）使用浏览器访问安装好的集群的 Dashboard 界面。在浏览器地址栏输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://&lt;你的虚假机IP&gt;:8443</span><br></pre></td></tr></table></figure><p>在登录界面中输入默认的用户名: admin 和密码: p@ssw0rd （这些其实是在 group_vars/all.yml 文件中设置的），就可以看到Dashboard界面了。如图</p><p><img src="/images/ceph/ceph-dashboard-on-single-node-cluster.png" alt="ceph dashboard on single node cluster"></p><p>可以看到，集群现在存在一个警告: “mon is allowing insecure global_id reclaim”, 在命令行执行 ceph -s 查看集群的状态时，也可以看到同一个警告。</p><p>在命令行执行下面的语句消除该警告</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph config <span class="built_in">set</span> mon auth_allow_insecure_global_id_reclaim <span class="literal">false</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为方便大家快速上手Ceph，我制作了一个基于Vmware的虚拟机，安装了CentOS 7.9系统并完成了一些按照Ceph必须完成的设置，包括关闭了防火墙及SELinux等。你只需要按照本文中的几个步骤就可以轻松的搭建一个扩扩展的单节点Ceph集群。&lt;/p&gt;
    
    </summary>
    
      <category term="Ceph分布式存储" scheme="https://www.mls-tech.info/categories/ceph/"/>
    
    
      <category term="Ceph分布式存储" scheme="https://www.mls-tech.info/tags/ceph/"/>
    
  </entry>
  
  <entry>
    <title>处理 1 pool(s) have non-power-of-two pn_num 的问题</title>
    <link href="https://www.mls-tech.info/ceph/ceph-1-pool-have-non-power-of-two-pg_num/"/>
    <id>https://www.mls-tech.info/ceph/ceph-1-pool-have-non-power-of-two-pg_num/</id>
    <published>2022-12-09T13:13:45.000Z</published>
    <updated>2022-12-09T13:22:44.340Z</updated>
    
    <content type="html"><![CDATA[<p>在ceph 集群中建立一个新的pool后，出现”1 pool(s) have non-power-of-two pg_num”。</p><a id="more"></a><p>通过命令建立了一个名为 first_pool 的存储池后，执行 ceph -s 命令可以看到如下的警告:</p><p><code></code>bash<br>health: HEALTH_WARN<br>1 pool(s) have non-power-of-two pg_num<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**原因是: 建立 pool 时，指定的 pg_num 不是 2 的幂会触发这个告警**</span><br><span class="line"></span><br><span class="line">通过命令</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">ceph osd pool ls detail | grep first_pool</span><br></pre></td></tr></table></figure><p></p><p>可以观察到 first_pool 的 pg_num 是 10。因此会报上述的警告。 使用 set 命令改变 pg_num 的值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool <span class="built_in">set</span> first_pool pg_num 32</span><br></pre></td></tr></table></figure><p>pgp_num 通常设置为与pg_num 相同。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool <span class="built_in">set</span> first_pool pgp_num 32</span><br></pre></td></tr></table></figure><p><strong>命令执行后会有一个准备调整的过程，需要一些时间</strong></p><p>再查看集群的状态，转为正常</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cluster:</span><br><span class="line">  id:     6c0d548f-5da2-46a5-b289-f1cd16a31aa2</span><br><span class="line">  health: HEALTH_OK</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  mon: 1 daemons, quorum ceph-01 (age 20m)</span><br><span class="line">  mgr: ceph-01(active, since 20m)</span><br><span class="line">  osd: 3 osds: 3 up (since 20m), 3 <span class="keyword">in</span> (since 15h)</span><br><span class="line"></span><br><span class="line">data:</span><br><span class="line">  pools:   1 pools, 128 pgs</span><br><span class="line">  objects: 0 objects, 0 B</span><br><span class="line">  usage:   3.0 GiB used, 27 GiB / 30 GiB avail</span><br><span class="line">  pgs:     128 active+clean</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在ceph 集群中建立一个新的pool后，出现”1 pool(s) have non-power-of-two pg_num”。&lt;/p&gt;
    
    </summary>
    
      <category term="Ceph分布式存储" scheme="https://www.mls-tech.info/categories/ceph/"/>
    
    
      <category term="Ceph分布式存储" scheme="https://www.mls-tech.info/tags/ceph/"/>
    
  </entry>
  
  <entry>
    <title>处理 pgs 100.000% pgs not active 的问题</title>
    <link href="https://www.mls-tech.info/ceph/ceph-pgs-100-precent-not-active/"/>
    <id>https://www.mls-tech.info/ceph/ceph-pgs-100-precent-not-active/</id>
    <published>2022-12-07T22:56:12.000Z</published>
    <updated>2022-12-07T23:04:18.880Z</updated>
    
    <content type="html"><![CDATA[<p>在ceph 集群中建立 pool 以后，集群中的 pgs 一致处于 not active 的状态。这个问题和CRUSH算法中的分配规则有关。</p><a id="more"></a><p>解决方法，修改CRUSHMap。</p><p>导出 crushmap, 执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph osd getcrushmap -o crushmap</span><br></pre></td></tr></table></figure><p>反编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crushtool -d crushmap crushmap.txt</span><br></pre></td></tr></table></figure><p>查看内容，如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># begin crush map</span></span><br><span class="line">tunable choose_local_tries 0</span><br><span class="line">tunable choose_local_fallback_tries 0</span><br><span class="line">tunable choose_total_tries 50</span><br><span class="line">tunable chooseleaf_descend_once 1</span><br><span class="line">tunable chooseleaf_vary_r 1</span><br><span class="line">tunable chooseleaf_stable 1</span><br><span class="line">tunable straw_calc_version 1</span><br><span class="line">tunable allowed_bucket_algs 54</span><br><span class="line"></span><br><span class="line"><span class="comment"># devices</span></span><br><span class="line">device 0 osd.0 class hdd</span><br><span class="line">device 1 osd.1 class hdd</span><br><span class="line">device 2 osd.2 class hdd</span><br><span class="line"></span><br><span class="line"><span class="comment"># types</span></span><br><span class="line"><span class="built_in">type</span> 0 osd</span><br><span class="line"><span class="built_in">type</span> 1 host</span><br><span class="line"><span class="built_in">type</span> 2 chassis</span><br><span class="line"><span class="built_in">type</span> 3 rack</span><br><span class="line"><span class="built_in">type</span> 4 row</span><br><span class="line"><span class="built_in">type</span> 5 pdu</span><br><span class="line"><span class="built_in">type</span> 6 pod</span><br><span class="line"><span class="built_in">type</span> 7 room</span><br><span class="line"><span class="built_in">type</span> 8 datacenter</span><br><span class="line"><span class="built_in">type</span> 9 zone</span><br><span class="line"><span class="built_in">type</span> 10 region</span><br><span class="line"><span class="built_in">type</span> 11 root</span><br><span class="line"></span><br><span class="line"><span class="comment"># buckets</span></span><br><span class="line">host ceph-01 &#123;</span><br><span class="line">        id -3           <span class="comment"># do not change unnecessarily</span></span><br><span class="line">        id -4 class hdd         <span class="comment"># do not change unnecessarily</span></span><br><span class="line">        <span class="comment"># weight 0.029</span></span><br><span class="line">        alg straw2</span><br><span class="line">        <span class="built_in">hash</span> 0  <span class="comment"># rjenkins1</span></span><br><span class="line">        item osd.0 weight 0.010</span><br><span class="line">        item osd.1 weight 0.010</span><br><span class="line">        item osd.2 weight 0.010</span><br><span class="line">&#125;</span><br><span class="line">root default &#123;</span><br><span class="line">        id -1           <span class="comment"># do not change unnecessarily</span></span><br><span class="line">        id -2 class hdd         <span class="comment"># do not change unnecessarily</span></span><br><span class="line">        <span class="comment"># weight 0.029</span></span><br><span class="line">        alg straw2</span><br><span class="line">        <span class="built_in">hash</span> 0  <span class="comment"># rjenkins1</span></span><br><span class="line">        item ceph-01 weight 0.029</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># rules</span></span><br><span class="line">rule replicated_rule &#123;</span><br><span class="line">        id 0</span><br><span class="line">        <span class="built_in">type</span> replicated</span><br><span class="line">        min_size 1</span><br><span class="line">        max_size 10</span><br><span class="line">        step take default</span><br><span class="line">        step chooseleaf firstn 0 <span class="built_in">type</span> host</span><br><span class="line">        step emit</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到其中有一条规则， “step chooseleaf firstn 0 type host”，</p><p>将 host 修改为 osd</p><p>修改为 step chooseleaf firstn 0 type osd</p><p>编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crushtool -c crushmap.txt -o crushmap-new</span><br></pre></td></tr></table></figure><p>加载新规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph osd setcrushmap -i crushmap-new</span><br></pre></td></tr></table></figure><p>再查看集群状态，可以看到 pgs 已经成为 active</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cluster:</span><br><span class="line">  id:     6c0d548f-5da2-46a5-b289-f1cd16a31aa2</span><br><span class="line">  health: HEALTH_WARN</span><br><span class="line">          1 pool(s) have non-power-of-two pg_num</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  mon: 1 daemons, quorum ceph-01 (age 52m)</span><br><span class="line">  mgr: ceph-01(active, since 45m)</span><br><span class="line">  osd: 3 osds: 3 up (since 50m), 3 <span class="keyword">in</span> (since 50m)</span><br><span class="line"></span><br><span class="line">data:</span><br><span class="line">  pools:   1 pools, 20 pgs</span><br><span class="line">  objects: 0 objects, 0 B</span><br><span class="line">  usage:   3.0 GiB used, 27 GiB / 30 GiB avail</span><br><span class="line">  pgs:     20 active+clean</span><br></pre></td></tr></table></figure><p>问题解决。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在ceph 集群中建立 pool 以后，集群中的 pgs 一致处于 not active 的状态。这个问题和CRUSH算法中的分配规则有关。&lt;/p&gt;
    
    </summary>
    
      <category term="Ceph分布式存储" scheme="https://www.mls-tech.info/categories/ceph/"/>
    
    
      <category term="Ceph分布式存储" scheme="https://www.mls-tech.info/tags/ceph/"/>
    
  </entry>
  
  <entry>
    <title>Ceph从入门到认证 - 基于Centos7搭建Ceph单节点集群</title>
    <link href="https://www.mls-tech.info/ceph/ceph-setup-sinlge-node-cluster-on-centos/"/>
    <id>https://www.mls-tech.info/ceph/ceph-setup-sinlge-node-cluster-on-centos/</id>
    <published>2022-12-06T23:12:33.000Z</published>
    <updated>2022-12-06T23:06:36.602Z</updated>
    
    <content type="html"><![CDATA[<p>Ceph从入门到认证系列是为初学Ceph的人准备的快速入门教程，通过实践优先的方式，在实践中完成对Ceph知识体系的认识和了解。本系列文章也参考了官方Ceph认证考试(Ex-125)要求的知识点，强化实际操作能力。本文是Ceph零基础起步系列文章的第一篇，力图通过简单的环境搭建，让大家可以快速的进入学习状态。</p><a id="more"></a><h2 id="预备主机"><a href="#预备主机" class="headerlink" title="预备主机"></a>预备主机</h2><p>准备一台虚拟机（VirutalBox或Vmware）,或是在云端申请一台主机</p><p>推荐配置如下:</p><p>CPU：2核以上，<br>内存: 4G内存）<br>硬盘: 除系统盘以外，再配置大小为10G的硬盘三块</p><p>安装好CentOS 7 系统并完成以下准备工作:</p><ol><li>切换 CentOS 的更新源为国内源</li><li>安装 Python3</li><li>切换 Python3 的源为国内源</li></ol><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ol><li>修改主机名</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl <span class="built_in">set</span>-hostname ceph-01</span><br></pre></td></tr></table></figure><ol start="2"><li>修改 /etc/hosts 文件，添加地址项</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.3.118  ceph-01</span><br></pre></td></tr></table></figure><p>前面的为你机器的内网地址。</p><ol start="3"><li>设置免密登录</li></ol><p>修改 root 用的密码为; Password.123</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><p>生成key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>全部使用默认设置，系统显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/home/stu/.ssh/id_rsa):</span><br><span class="line">Created directory <span class="string">'/home/stu/.ssh'</span>.</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /home/stu/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /home/stu/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:lKE3BBI6eJy2lSkpxfGEn8CjFMMsplZ2HO8bTh3OxDU stu@c-node00</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|o=+o=oo.o  E     |</span></span><br><span class="line"><span class="string">|.OBO *.o.o. .    |</span></span><br><span class="line"><span class="string">|B.%+*...=+       |</span></span><br><span class="line"><span class="string">|o= =o .o=..      |</span></span><br><span class="line"><span class="string">|. .    +S+       |</span></span><br><span class="line"><span class="string">|      o o        |</span></span><br><span class="line"><span class="string">|       o         |</span></span><br><span class="line"><span class="string">|                 |</span></span><br><span class="line"><span class="string">|                 |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure><p>将密钥复制到其它节点，以复制到 ceph-01 为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id ceph-01</span><br></pre></td></tr></table></figure><p>验证 ssh 能过无密码登录，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh ceph-01</span><br></pre></td></tr></table></figure><h2 id="安装-Ansible"><a href="#安装-Ansible" class="headerlink" title="安装 Ansible"></a>安装 Ansible</h2><ol><li>安装 ansible</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ansible</span><br></pre></td></tr></table></figure><p>安装完成后可执行 ansible –version 验证安装是否成功。</p><h2 id="安装-ceph-ansible"><a href="#安装-ceph-ansible" class="headerlink" title="安装 ceph-ansible"></a>安装 ceph-ansible</h2><p>上传 ceph-ansible-4.0.45.tar.gz 安装包</p><p>解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf ceph-ansible-4.0.45.tar.gz</span><br></pre></td></tr></table></figure><p>改名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv ceph-ansible-4.0.45 ceph-ansible</span><br></pre></td></tr></table></figure><h2 id="配置主机信息"><a href="#配置主机信息" class="headerlink" title="配置主机信息"></a>配置主机信息</h2><p>编辑 /etc/ansible/hosts 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[mons]</span><br><span class="line">ceph-01</span><br><span class="line"></span><br><span class="line">[osds]</span><br><span class="line">ceph-01</span><br><span class="line"></span><br><span class="line">[clients]</span><br><span class="line">ceph-01</span><br><span class="line"></span><br><span class="line">[grafana-server]</span><br><span class="line">ceph-01</span><br></pre></td></tr></table></figure><p>运行以下命令进行验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m ping</span><br></pre></td></tr></table></figure><p>如果看到类似如下的结果，说明配置成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ceph-01 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"ping"</span>: <span class="string">"pong"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置-ceph-基本信息"><a href="#配置-ceph-基本信息" class="headerlink" title="配置 ceph 基本信息"></a>配置 ceph 基本信息</h2><p>打开 group_vars/all.yml 文件，修改如下的一些信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">ceph_origin: repository</span><br><span class="line">ceph_repository: community</span><br><span class="line"></span><br><span class="line">ceph_mirror: http://mirrors.tuna.tsinghua.edu.cn/ceph</span><br><span class="line">ceph_stable_key: https://mirrors.tuna.tsinghua.edu.cn/ceph/keys/release.asc</span><br><span class="line"></span><br><span class="line">ceph_stable: <span class="literal">true</span></span><br><span class="line">ceph_stable_release: nautilus</span><br><span class="line">ceph_stable_readhat_distro: el7</span><br><span class="line">cephx: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">monitor_interface: eth0</span><br><span class="line"></span><br><span class="line">journal_size: 2048</span><br><span class="line"></span><br><span class="line">public_network: 192.168.0.0/24</span><br><span class="line">cluster_network: <span class="string">"&#123;&#123; public_network &#125;&#125;"</span></span><br><span class="line"></span><br><span class="line">osd_mkfs_type: xfs</span><br><span class="line">osd_mkfs_options_xfs: -f -i size=2048</span><br><span class="line">osd_mount_options_xfs: noatime,largeio,inode64,swalloc</span><br><span class="line"></span><br><span class="line">dashboard_admin_user: admin</span><br><span class="line">dashboard_admin_password: p@ssw0rd</span><br><span class="line">grafana_admin_password: admin</span><br></pre></td></tr></table></figure><p>查看本机的磁盘</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsblk</span><br></pre></td></tr></table></figure><p>修改 osds.yml 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">devices:</span><br><span class="line">  - /dev/vdb</span><br><span class="line">  - /dev/vdc</span><br><span class="line">  - /dev/vdd</span><br><span class="line"></span><br><span class="line">journal_collocation: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>复制 site.yml 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp site.yml.sample site.yml</span><br></pre></td></tr></table></figure><h2 id="部署单节点集群"><a href="#部署单节点集群" class="headerlink" title="部署单节点集群"></a>部署单节点集群</h2><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -i /etc/ansible/hosts site.yml</span><br></pre></td></tr></table></figure><p>部署完成后，可以执行 ceph -s 查看集群准备，可以看到有一个警告。</p><p>执行下面的语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph config <span class="built_in">set</span> mon auth_allow_insecure_global_id_reclaim <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>以消除警告。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ceph从入门到认证系列是为初学Ceph的人准备的快速入门教程，通过实践优先的方式，在实践中完成对Ceph知识体系的认识和了解。本系列文章也参考了官方Ceph认证考试(Ex-125)要求的知识点，强化实际操作能力。本文是Ceph零基础起步系列文章的第一篇，力图通过简单的环境搭建，让大家可以快速的进入学习状态。&lt;/p&gt;
    
    </summary>
    
      <category term="Ceph分布式存储" scheme="https://www.mls-tech.info/categories/ceph/"/>
    
    
      <category term="Ceph分布式存储" scheme="https://www.mls-tech.info/tags/ceph/"/>
    
  </entry>
  
  <entry>
    <title>解决hexo博客发布到github时出现 authentication failed 的问题</title>
    <link href="https://www.mls-tech.info/hexo/hexo-deploy-github-authentication-failed/"/>
    <id>https://www.mls-tech.info/hexo/hexo-deploy-github-authentication-failed/</id>
    <published>2022-12-05T23:38:52.000Z</published>
    <updated>2022-12-05T22:38:13.549Z</updated>
    
    <content type="html"><![CDATA[<p>用 hexo 发布博客到 Github 时，遇到了如下的错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">remote: Invalid username or password.</span><br><span class="line">fatal: Authentication failed <span class="keyword">for</span> <span class="string">'https://github.com/xxxx/xxxx.github.io.git/'</span></span><br></pre></td></tr></table></figure><p>起因是 Github 已经不支持采用用户名、密码的方式从第三方应用中进行认证。 解决办法使用 “Personal access token”。</p><p>登录你的 Github 账号，在右上角头像图标的下拉菜单中选择”Settings”, 再在左边的类别中选择 “Developer settings”。就可以看到 “Personal access tokens”。按”Generate new token”按钮选择生成一个新的token, 选择相关的权限。 用 hexo 进行发布博客，只需要选择”public_repo, repo:status, repo_deployment”这几项权限即可。<strong>生成后记得复制github生成的token</strong>, 完成后的状态如下图:</p><p><img src="/images/hexo/hexo-deploy-github-authentication-failed-01.jpg" alt="Authentication failed - Personal access tokens"></p><p>完成上述操作后，打开博客项目中的 _config.yml 文件，找到”deploy”配置项，改为如下的格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://oauth2:&lt;your personal access token&gt;@github.com/xxxx/xxxx.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line">  token: &lt;your personal access token&gt;</span><br></pre></td></tr></table></figure><p><strong>用你真实的账号替换“xxxx”, 用上面在github中生成的 token 替换”<your personal access token>“。</your></strong></p><p>保存后再执行 hexo -d 就可以完成发布了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;用 hexo 发布博客到 Github 时，遇到了如下的错误&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
      <category term="博客维护" scheme="https://www.mls-tech.info/categories/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4/"/>
    
    
      <category term="前端" scheme="https://www.mls-tech.info/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>为Putty设置默认字体大小</title>
    <link href="https://www.mls-tech.info/tools/putty-set-default-fonts-size/"/>
    <id>https://www.mls-tech.info/tools/putty-set-default-fonts-size/</id>
    <published>2022-12-05T00:51:17.000Z</published>
    <updated>2022-12-05T01:20:15.934Z</updated>
    
    <content type="html"><![CDATA[<p>WinScp与Putty的组合是在Windows平台上非常好用的远程SSH工具, Winscp可以方便的阻止对远程主机配置信息的管理及文件传输，Putty 负责远程登录及主机上的操作。但Putty默认的字体大小为 “10-point”，在现在高分辨屏幕下看起来太小了，非常打开以后都要再次设置大小，感觉非常繁琐，麻烦。最近找到了设置Putty默认字体大小的方法，记录一下，免得以后忘掉:</p><ol><li><p>直接运行 Putty 应用，看到的就是”Putty Configuration”窗口，选择 “Appearance”</p></li><li><p>再选择 “Font Settings” 中的 “Change…”按钮，选择适合的字体及字体大小并确认（如下图）</p></li></ol><p><img src="/images/tools/putty-set-default-font-size-01.png" alt="Putty Change default Font size"></p><ol start="3"><li>这一步最关键，选择 “Session”, 然后选择 “Default Settings”, 按下 “Save”按钮，将刚才的选择保存为默认设置（如下图）</li></ol><p><img src="/images/tools/putty-set-default-font-size-02.png" alt="Putty Save Default Configuration"></p><p>完成上述步骤后，再从 Winscp中打开新的Putty时，使用的就是默认设置的字体了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;WinScp与Putty的组合是在Windows平台上非常好用的远程SSH工具, Winscp可以方便的阻止对远程主机配置信息的管理及文件传输，Putty 负责远程登录及主机上的操作。但Putty默认的字体大小为 “10-point”，在现在高分辨屏幕下看起来太小了，非常打
      
    
    </summary>
    
      <category term="tools" scheme="https://www.mls-tech.info/categories/tools/"/>
    
    
      <category term="win-tools" scheme="https://www.mls-tech.info/tags/win-tools/"/>
    
  </entry>
  
  <entry>
    <title>解决在minikube中发布Service, 本地访问失败的问题</title>
    <link href="https://www.mls-tech.info/microservice/k8s/minikube-can-not-access-local-serivce/"/>
    <id>https://www.mls-tech.info/microservice/k8s/minikube-can-not-access-local-serivce/</id>
    <published>2022-09-15T02:57:37.000Z</published>
    <updated>2022-09-15T06:14:59.124Z</updated>
    
    <content type="html"><![CDATA[<p>有学员在使用 minikube 发布应用时遇到正常发布了Deployment和Service后，Service不能正常访问的问题。通过 kubeclt describe, kubectl logs 等命令检查，发现 pod 已经正常运行，但就是不能通过 localhost 进行访问。本文记录遇到问题的过程及解决方法。</p><a id="more"></a><h2 id="发布应用"><a href="#发布应用" class="headerlink" title="发布应用"></a>发布应用</h2><p>使用以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl run nginx --image=nginx --restart=Never --port=80</span><br></pre></td></tr></table></figure><p>然后通过新建一个服务来暴露应用，选择 NodePort 类型，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl expose po nginx --name=front-end-service --port=80 --target-port=80 --<span class="built_in">type</span>=NodePort</span><br></pre></td></tr></table></figure><p>通常建立这个服务后，就可以通过 localhost 加上 kubernetes 随机生成的端口访问到 nginx 服务了。</p><p>但在 minikuber 中使用下面的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://locahost:&lt;端口&gt;</span><br></pre></td></tr></table></figure><p>却不能访问，显示连接拒绝。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>问题出在 minikube 跑在自己的虚拟网络中，并不是在 localhost 中，因此我们首先需要找到 minikube 的 IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikuber ip</span><br></pre></td></tr></table></figure><p>然后通过该 ip 就可以访问了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://192.168.64.2:&lt;端口&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有学员在使用 minikube 发布应用时遇到正常发布了Deployment和Service后，Service不能正常访问的问题。通过 kubeclt describe, kubectl logs 等命令检查，发现 pod 已经正常运行，但就是不能通过 localhost 进行访问。本文记录遇到问题的过程及解决方法。&lt;/p&gt;
    
    </summary>
    
      <category term="microservice" scheme="https://www.mls-tech.info/categories/microservice/"/>
    
      <category term="Kubernetes" scheme="https://www.mls-tech.info/categories/microservice/kubernetes/"/>
    
    
      <category term="microservice" scheme="https://www.mls-tech.info/tags/microservice/"/>
    
      <category term="k8s" scheme="https://www.mls-tech.info/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>处理 &quot;Unable to connect to the server dial tcp 127.0.0.1:52186 connectex No connection could be made because the target machine actively refused it.&quot; 的错误</title>
    <link href="https://www.mls-tech.info/microservice/k8s/k8s-handle-Unable-to-connect-to-the-server-dial-tcp-127-0-0-1-52186/"/>
    <id>https://www.mls-tech.info/microservice/k8s/k8s-handle-Unable-to-connect-to-the-server-dial-tcp-127-0-0-1-52186/</id>
    <published>2022-09-14T08:23:39.000Z</published>
    <updated>2022-09-14T08:46:24.878Z</updated>
    
    <content type="html"><![CDATA[<p>在笔记本电脑的 Windows 10 中”启用”了Docker Desktop 自带的 Kubernetes 成功后，却发现执行任何 kubectl 命令都会得到如下的错误: “Unable to connect to the server: dial tcp 127.0.0.1:52186: connectex: No connection could be made because the target machine actively refused it.”。</p><a id="more"></a><p>比如：执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl ge node</span><br></pre></td></tr></table></figure><p>系统如下的错误信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Unable to connect to the server: dial tcp 127.0.0.1:52186: connectex: No connection could be made because the target machine actively refused it.</span><br></pre></td></tr></table></figure><p>一开始有点懵，觉得整个安装步骤都没有报错，说明安装是成功的。仔细想了一下才想起来我原来在这台机器上安装过 minikube , 虽然后来删除了，但可能只是将程序删除了，应该是还残留量一些配置信息，导致了上面的错误。</p><p>根据这个思路，查看用户目录中 .kube 目录里面的 config 文件。发现内容如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">clusters:</span><br><span class="line">- cluster:</span><br><span class="line">    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRY......</span><br><span class="line">    server: https://kubernetes.docker.internal:6443</span><br><span class="line">  name: docker-desktop</span><br><span class="line">- cluster:</span><br><span class="line">    certificate-authority: C:\Users\xxx\.minikube\ca.crt</span><br><span class="line">    extensions:</span><br><span class="line">    - extension:</span><br><span class="line">        last-update: Sat, 09 Apr 2022 12:52:16 CST</span><br><span class="line">        provider: minikube.sigs.k8s.io</span><br><span class="line">        version: v1.24.0</span><br><span class="line">      name: cluster_info</span><br><span class="line">    server: https://127.0.0.1:52186</span><br><span class="line">  name: minikube</span><br><span class="line">contexts:</span><br><span class="line">- context:</span><br><span class="line">    cluster: docker-desktop</span><br><span class="line">    user: docker-desktop</span><br><span class="line">  name: docker-desktop</span><br><span class="line">- context:</span><br><span class="line">    cluster: minikube</span><br><span class="line">    extensions:</span><br><span class="line">    - extension:</span><br><span class="line">        last-update: Sat, 09 Apr 2022 12:52:16 CST</span><br><span class="line">        provider: minikube.sigs.k8s.io</span><br><span class="line">        version: v1.24.0</span><br><span class="line">      name: context_info</span><br><span class="line">    namespace: default</span><br><span class="line">    user: minikube</span><br><span class="line">  name: minikube</span><br><span class="line">current-context: minikube</span><br><span class="line">kind: Config</span><br><span class="line">preferences: &#123;&#125;</span><br><span class="line">users:</span><br><span class="line">- name: docker-desktop</span><br><span class="line">  user:</span><br><span class="line">    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJYmh1QzZIV......</span><br><span class="line">    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMmYrYWxq......</span><br><span class="line">- name: minikube</span><br><span class="line">  user:</span><br><span class="line">    client-certificate: C:\Users\xxx\.minikube\profiles\minikube\client.crt</span><br><span class="line">    client-key: C:\Users\xxx\.minikube\profiles\minikube\client.key</span><br></pre></td></tr></table></figure><p>可以果然是多了一个 Context, 是前一次安装、使用 minikube 时，由 minikube 安装程序建立的 Cluster 和 context 信息, 该 context 的名字被设置为 minikube。</p><p>而且配置文件中的 current-context 也被设置为 minikube.</p><p>由此推断，简单的删除 minikube 相关的配置信息并修改 current-context 的值就应该可以解决问题。</p><p>动手修改 config 文件，最后的内容如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">clusters:</span><br><span class="line">- cluster:</span><br><span class="line">    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXc......</span><br><span class="line">    server: https://kubernetes.docker.internal:6443</span><br><span class="line">  name: docker-desktop</span><br><span class="line">contexts:</span><br><span class="line">- context:</span><br><span class="line">    cluster: docker-desktop</span><br><span class="line">    user: docker-desktop</span><br><span class="line">  name: docker-desktop</span><br><span class="line">current-context: docker-desktop</span><br><span class="line">kind: Config</span><br><span class="line">preferences: &#123;&#125;</span><br><span class="line">users:</span><br><span class="line">- name: docker-desktop</span><br><span class="line">  user:</span><br><span class="line">    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXc.....</span><br><span class="line">    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMmYrYWxqOFQz...</span><br></pre></td></tr></table></figure><p>保存后 再执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get node</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NAME             STATUS   ROLES           AGE    VERSION</span><br><span class="line">docker-desktop   Ready    control-plane   4d1h   v1.24.1</span><br></pre></td></tr></table></figure><p>故障解除</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在笔记本电脑的 Windows 10 中”启用”了Docker Desktop 自带的 Kubernetes 成功后，却发现执行任何 kubectl 命令都会得到如下的错误: “Unable to connect to the server: dial tcp 127.0.0.1:52186: connectex: No connection could be made because the target machine actively refused it.”。&lt;/p&gt;
    
    </summary>
    
      <category term="microservice" scheme="https://www.mls-tech.info/categories/microservice/"/>
    
      <category term="Kubernetes" scheme="https://www.mls-tech.info/categories/microservice/kubernetes/"/>
    
    
      <category term="microservice" scheme="https://www.mls-tech.info/tags/microservice/"/>
    
      <category term="k8s" scheme="https://www.mls-tech.info/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>在 Win10 上启用 Docker Desktop 中的的 Kubernetes 集群</title>
    <link href="https://www.mls-tech.info/microservice/k8s/k8s-enable-in-docker-on-win10/"/>
    <id>https://www.mls-tech.info/microservice/k8s/k8s-enable-in-docker-on-win10/</id>
    <published>2022-09-03T05:01:39.000Z</published>
    <updated>2022-09-03T05:15:48.804Z</updated>
    
    <content type="html"><![CDATA[<p>Docker Desktop 现在直接支持部署一个单机版的 Kubernetes，非常利于学习和开发等需要单机，低电脑配置的场景。 本文介绍了如何在一台PC（笔记本）上的 Win10 环境中安装 Docker Destkop 并启用 Kubernetes。</p><a id="more"></a><h2 id="安装-Docker-Desktop"><a href="#安装-Docker-Desktop" class="headerlink" title="安装 Docker Desktop"></a>安装 Docker Desktop</h2><p>因为每个 Docker Desktop 版本对应的 Kubernetes 版本是不同的，所以本文以 4.10.1 版 Docker Desktop 为例</p><p>首先下载 4.10.1 版本的 Docker Desktop</p><p>如果在官网找不到，我在网盘中共享了一份</p><p>链接：<a href="https://pan.baidu.com/s/1ja87uL0dg5BIUOS-IaluSQ" rel="external nofollow noopener noreferrer" target="_blank">https://pan.baidu.com/s/1ja87uL0dg5BIUOS-IaluSQ</a><br>提取码：aj4q</p><p>下载好以后，双击启动安装程序</p><p>在 Configuration 页面记得选择 “Use WSL 2 instead of Hyper-V” 这个选择， 如图:</p><p><img src="/images/k8s/win10-docker-desktop-install-configuration.jpg" alt="docker-desktop-install-configuration"></p><p>安装完成后确保 Docker Desktop 能正常启动运行，如图</p><p><img src="/images/k8s/win10-docker-desktop-normal.jpg" alt="docker-desktop-normal"></p><h2 id="查看-Kubernetes-版本"><a href="#查看-Kubernetes-版本" class="headerlink" title="查看 Kubernetes 版本"></a>查看 Kubernetes 版本</h2><p>检查当前 Docker Desktop 所对应的版本， 在 Docker Desktop 界面中选择设置（右上角的齿轮图标），再在左边的列表中选择 “Kubernetes”, 如图</p><p><img src="/images/k8s/win10-docker-desktop-k8s-configuration-1.jpg" alt="docker-desktop-k8s-configurtion"></p><p>可以看到， 对应的 kubernetes 版本为 v1.24.1</p><h2 id="为-Docker-Desktop-设置国内镜像仓库"><a href="#为-Docker-Desktop-设置国内镜像仓库" class="headerlink" title="为 Docker Desktop 设置国内镜像仓库"></a>为 Docker Desktop 设置国内镜像仓库</h2><p>在 Docker Engine 页面加入以下内容，</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">"registry-mirrors": [</span><br><span class="line">  "https://zy2z5esb.mirror.aliyuncs.com",</span><br><span class="line">  <span class="string">"https://docker.mirrors.ustc.edu.cn"</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>如图:</p><p><img src="/images/k8s/win10-docker-desktop-setup-mirrors.jpg" alt="docker-desktop-setup-mirrors"></p><p>设置好以后，选择 “Apply &amp; Restart”</p><h2 id="拉取-Kubernetes-需要的镜像"><a href="#拉取-Kubernetes-需要的镜像" class="headerlink" title="拉取 Kubernetes 需要的镜像"></a>拉取 Kubernetes 需要的镜像</h2><p>因为 kubernetes 需要的镜像在国内拉取经常会失败，所以我们选择从国内的镜像仓库（比如阿里）镜像拉取。</p><p>Github 上有个项目就是专门用来处理镜像的国内拉取的: <a href="https://github.com/AliyunContainerService/k8s-for-docker-desktop/blob/master/images.properties" rel="external nofollow noopener noreferrer" target="_blank">k8s-for-docker-desktop/images.properties at master · AliyunContainerService/k8s-for-docker-desktop · GitHub</a>, 本文的镜像拉取部分参考了该网站。</p><p>建立一个名为 images.properties 的文件，内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">k8s.gcr.io/pause:3.7=registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.7</span><br><span class="line">k8s.gcr.io/kube-controller-manager:v1.24.1=registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager:v1.24.1</span><br><span class="line">k8s.gcr.io/kube-scheduler:v1.24.1=registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler:v1.24.1</span><br><span class="line">k8s.gcr.io/kube-proxy:v1.24.1=registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy:v1.24.1</span><br><span class="line">k8s.gcr.io/kube-apiserver:v1.24.1=registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver:v1.24.1</span><br><span class="line">k8s.gcr.io/etcd:3.5.3-0=registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:3.5.3-0</span><br><span class="line">k8s.gcr.io/coredns/coredns:v1.8.6=registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:1.8.6</span><br><span class="line">k8s.gcr.io/ingress-nginx/controller:v1.2.0=registry.cn-hangzhou.aliyuncs.com/google_containers/nginx-ingress-controller:v1.2.0</span><br><span class="line">k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1=registry.cn-hangzhou.aliyuncs.com/google_containers/kube-webhook-certgen:v1.1.1</span><br></pre></td></tr></table></figure><p>再在相同目录下建立一个名为: load_images.ps1 的文件，内容如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">foreach(<span class="variable">$line</span> <span class="keyword">in</span> Get-Content .\images.properties) &#123;</span><br><span class="line">    <span class="variable">$data</span> = <span class="variable">$line</span>.Split(<span class="string">'='</span>)</span><br><span class="line">    <span class="variable">$key</span> = <span class="variable">$data</span>[0];</span><br><span class="line">    <span class="variable">$value</span> = <span class="variable">$data</span>[1];</span><br><span class="line">    Write-Output <span class="string">"<span class="variable">$key</span>=<span class="variable">$value</span>"</span></span><br><span class="line">    docker pull <span class="variable">$&#123;value&#125;</span></span><br><span class="line">    docker tag <span class="variable">$&#123;value&#125;</span> <span class="variable">$&#123;key&#125;</span></span><br><span class="line">    docker rmi <span class="variable">$&#123;value&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存以后，在目录开启一个 PowerShell 窗口，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\load_images.ps1</span><br></pre></td></tr></table></figure><p>拉取完以后，可以使用 docker 命令查看镜像是否都拉取成功，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p>正常的话，系统显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">REPOSITORY                                      TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">k8s.gcr.io/kube-apiserver                       v1.24.1   e9f4b425f919   3 months ago    130MB</span><br><span class="line">k8s.gcr.io/kube-proxy                           v1.24.1   beb86f5d8e6c   3 months ago    110MB</span><br><span class="line">k8s.gcr.io/kube-controller-manager              v1.24.1   b4ea7e648530   3 months ago    119MB</span><br><span class="line">k8s.gcr.io/kube-scheduler                       v1.24.1   18688a72645c   3 months ago    51MB</span><br><span class="line">k8s.gcr.io/ingress-nginx/controller             v1.2.0    04fcc7019408   4 months ago    288MB</span><br><span class="line">k8s.gcr.io/etcd                                 3.5.3-0   aebe758cef4c   4 months ago    299MB</span><br><span class="line">k8s.gcr.io/pause                                3.7       221177c6082a   5 months ago    711kB</span><br><span class="line">k8s.gcr.io/ingress-nginx/kube-webhook-certgen   v1.1.1    c41e9fcadf5a   10 months ago   47.7MB</span><br><span class="line">k8s.gcr.io/coredns/coredns                      v1.8.6    a4ca41631cc7   11 months ago   46.8MB</span><br></pre></td></tr></table></figure><h2 id="开启-Kubernetes"><a href="#开启-Kubernetes" class="headerlink" title="开启 Kubernetes"></a>开启 Kubernetes</h2><p>在 Docker Desktop 页面，选择设置 -&gt; Kubernetes -&gt; Enable Kubernetes, 如图:</p><p><img src="/images/k8s/win10-docker-desktop-enable-k8s.jpg" alt="win10-docker-desktop-enable-k8s"></p><p>等一会儿就安装好了，如图：</p><p><img src="/images/k8s/win10-docker-desktop-enable-k8s-success.jpg" alt="win10-docker-desktop-enable-k8s-success"></p><p>接下来就可以在命令行窗口使用 kubectl 发送 kubernetes 的相关命令了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker Desktop 现在直接支持部署一个单机版的 Kubernetes，非常利于学习和开发等需要单机，低电脑配置的场景。 本文介绍了如何在一台PC（笔记本）上的 Win10 环境中安装 Docker Destkop 并启用 Kubernetes。&lt;/p&gt;
    
    </summary>
    
      <category term="microservice" scheme="https://www.mls-tech.info/categories/microservice/"/>
    
      <category term="Kubernetes" scheme="https://www.mls-tech.info/categories/microservice/kubernetes/"/>
    
    
      <category term="microservice" scheme="https://www.mls-tech.info/tags/microservice/"/>
    
      <category term="k8s" scheme="https://www.mls-tech.info/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>在 Minikube 中安装 Istio</title>
    <link href="https://www.mls-tech.info/microservice/k8s/istio-on-minikube_cn/"/>
    <id>https://www.mls-tech.info/microservice/k8s/istio-on-minikube_cn/</id>
    <published>2022-07-28T01:53:28.000Z</published>
    <updated>2022-07-28T01:54:02.567Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://istio.io" rel="external nofollow noopener noreferrer" target="_blank">Istio</a>无疑是现在最流行的服务网格开源实现。它以透明层的方式构建在现有分布式应用中，同时也提供了各种API，可以与任何日志平台、监控系统或策略系统集成。Istio的多样化特性可以让你高效地运行分布式微服务架构，并提供一种统一的方式来保护、连接和监控微服务。本文介绍如何在 Minikube中安装 Istio，以方便开发者学习、使用 Istio 相关的知识。</p><a id="more"></a><h2 id="启动-Minikube"><a href="#启动-Minikube" class="headerlink" title="启动 Minikube"></a>启动 Minikube</h2><p>首先，在本机启动已经安装好的 Minikube (如果还没有安装 Minikube, 可以参考<a href="/microservice/k8s/minikube-install-on-apple-silicon-m1_cn/" title="在 Apple M1 电脑中安装 minikube">在 Apple M1 电脑中安装 minikube</a>进行安装), 执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube start</span><br></pre></td></tr></table></figure><p>如果成功启动，可以看到类似以下的系统输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">😄  Darwin 12.4 (arm64) 上的 minikube v1.24.0</span><br><span class="line">✨  根据现有的配置文件使用 docker 驱动程序</span><br><span class="line">👍  Starting control plane node minikube <span class="keyword">in</span> cluster minikube</span><br><span class="line">🚜  Pulling base image ...</span><br><span class="line">🔄  Restarting existing docker container <span class="keyword">for</span> <span class="string">"minikube"</span> ...</span><br><span class="line">🐳  正在 Docker 20.10.8 中准备 Kubernetes v1.22.3…</span><br><span class="line">🔎  Verifying Kubernetes components...</span><br><span class="line">    ▪ Using image registry.cn-hangzhou.aliyuncs.com/google_containers/storage-provisioner:v5</span><br><span class="line">🌟  Enabled addons: storage-provisioner, default-storageclass</span><br><span class="line"></span><br><span class="line">❗  /usr/<span class="built_in">local</span>/bin/kubectl is version 1.24.0, <span class="built_in">which</span> may have incompatibilites with Kubernetes 1.22.3.</span><br><span class="line">    ▪ Want kubectl v1.22.3? Try <span class="string">'minikube kubectl -- get pods -A'</span></span><br><span class="line">🏄  Done! kubectl is now configured to use <span class="string">"minikube"</span> cluster and <span class="string">"default"</span> namespace by default</span><br></pre></td></tr></table></figure><h2 id="下载-Istio"><a href="#下载-Istio" class="headerlink" title="下载 Istio"></a>下载 Istio</h2><p>直接在命令行执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://istio.io/downloadIstio | sh -</span><br></pre></td></tr></table></figure><p>也可以直接到 <a href="https://github.com/istio/istio/releases/tag/1.14.2" rel="external nofollow noopener noreferrer" target="_blank">Istio 的 release 页面</a>直接选择对应的版本进行下载， 因为要安装在 Apple M1 电脑上，我们选择 osx-arm64 的这个版本。</p><p>下载完成后，进入 isito-1.14.2 目录。因为我们默认的安装目录是 ~\Devel\isito-1.14.2, 所以执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~\Devel\isito-1.14.2</span><br></pre></td></tr></table></figure><p>将 ~\Devel\isito-1.14.2\bin 添加到系统 PATH 中去。</p><p>如果你使用的是 macOS 默认的 zsh, 则编辑用户目录下的 .zprofile， 加入类似下面的一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$PATH</span>:/Users/xxx/Devel/istio-1.14.2/bin"</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：用你的用户名替换上一行中的 xxx</strong></p></blockquote><p>为让修改立即生效，可以执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zprofile</span><br></pre></td></tr></table></figure><h2 id="检测是否可以正常安装"><a href="#检测是否可以正常安装" class="headerlink" title="检测是否可以正常安装"></a>检测是否可以正常安装</h2><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istioctl x precheck</span><br></pre></td></tr></table></figure><blockquote><p>**在 MacOS 中第一次执行时，会出现安全提醒，到”系统偏好设置“ -&gt; “安全性与隐私” 中去同意</p></blockquote><p>如果看到类似以下的系统输出，则说明 istio 可以在你的系统中正常安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">✔ No issues found when checking the cluster. Istio is safe to install or upgrade!</span><br><span class="line">  To get started, check out https://istio.io/latest/docs/setup/getting-started/</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istioctl install</span><br></pre></td></tr></table></figure><p>如果看到系统显示类似以下的信息，则表明安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">This will install the Istio 1.14.2 default profile with [<span class="string">"Istio core"</span> <span class="string">"Istiod"</span> <span class="string">"Ingress gateways"</span>] components into the cluster. Proceed? (y/N) y</span><br><span class="line">✔ Istio core installed                                                                                                                                        </span><br><span class="line">✔ Istiod installed                                                                                                                                            </span><br><span class="line">✔ Ingress gateways installed                                                                                                                                  </span><br><span class="line">✔ Installation complete                                                                                                                                       Making this installation the default <span class="keyword">for</span> injection and validation.</span><br><span class="line"></span><br><span class="line">Thank you <span class="keyword">for</span> installing Istio 1.14.  Please take a few minutes to tell us about your install/upgrade experience!  https://forms.gle/yEtCbt45FZ3VoDT5A</span><br></pre></td></tr></table></figure><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get ns</span><br></pre></td></tr></table></figure><p>可以看到系统显示如下信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">NAME              STATUS   AGE</span><br><span class="line">default           Active   211d</span><br><span class="line">istio-system      Active   26m</span><br><span class="line">kube-node-lease   Active   211d</span><br><span class="line">kube-public       Active   211d</span><br><span class="line">kube-system       Active   211d</span><br></pre></td></tr></table></figure><p>其中， istio-system 就是 istio 相关系统组件使用的命名空间</p><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -n istio-system</span><br></pre></td></tr></table></figure><p>查看 istio-system 中的 pod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NAME                                   READY   STATUS    RESTARTS   AGE</span><br><span class="line">istio-ingressgateway-f65885448-psxjh   1/1     Running   0          26m</span><br><span class="line">istiod-5cdcff89c6-4lvvz                1/1     Running   0          28m</span><br></pre></td></tr></table></figure><p>可以看到， istio 在 minikube 中安装了两个 pod, 分别是 istio-ingressgateway 和 istiod</p><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get svc  -n istio-system</span><br></pre></td></tr></table></figure><p>可以查看对应的服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NAME                   TYPE           CLUSTER-IP      EXTERNAL-IP   PORT(S)                                      AGE</span><br><span class="line">istio-ingressgateway   LoadBalancer   10.98.168.55    &lt;pending&gt;     15021:30788/TCP,80:32586/TCP,443:30008/TCP   29m</span><br><span class="line">istiod                 ClusterIP      10.96.193.232   &lt;none&gt;        15010/TCP,15012/TCP,443/TCP,15014/TCP        30m</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://istio.io&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Istio&lt;/a&gt;无疑是现在最流行的服务网格开源实现。它以透明层的方式构建在现有分布式应用中，同时也提供了各种API，可以与任何日志平台、监控系统或策略系统集成。Istio的多样化特性可以让你高效地运行分布式微服务架构，并提供一种统一的方式来保护、连接和监控微服务。本文介绍如何在 Minikube中安装 Istio，以方便开发者学习、使用 Istio 相关的知识。&lt;/p&gt;
    
    </summary>
    
      <category term="microservice" scheme="https://www.mls-tech.info/categories/microservice/"/>
    
      <category term="Kubernetes" scheme="https://www.mls-tech.info/categories/microservice/kubernetes/"/>
    
    
      <category term="microservice" scheme="https://www.mls-tech.info/tags/microservice/"/>
    
      <category term="k8s" scheme="https://www.mls-tech.info/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>在 Apple M1 电脑中安装 minikube</title>
    <link href="https://www.mls-tech.info/microservice/k8s/minikube-install-on-apple-silicon-m1_cn/"/>
    <id>https://www.mls-tech.info/microservice/k8s/minikube-install-on-apple-silicon-m1_cn/</id>
    <published>2022-07-27T06:42:10.000Z</published>
    <updated>2022-07-27T08:50:58.692Z</updated>
    
    <content type="html"><![CDATA[<p>我们通常在本地开发环境安装 Minikube, 用来学习、体验 K8s 的基本功能，也用来模拟测试应用部署在 k8s 的情况。本文介绍如何在 Apple M1 电脑中安装 Minikube。</p><a id="more"></a><h2 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h2><p>在 <a href="https://www.docker.com/products/docker-desktop" rel="external nofollow noopener noreferrer" target="_blank">Docker官方网站</a> 下载 Docker Desktop, 选择 Mac with Apple Chip 的版本。</p><p>下载完成后进行安装，按提示默认安装即可。</p><h2 id="下载-minikube"><a href="#下载-minikube" class="headerlink" title="下载 minikube"></a>下载 minikube</h2><p>下载 minikube 的 arm64 的版本，下载地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-arm64</span><br></pre></td></tr></table></figure><p>下载完成后的文件就是一个可执行文件，不需要安装。只需要赋予执行权限并放置到 PATH 路径下即可。 执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x minikube-darwin-arm64</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv minikube-darwin-arm64 /usr/<span class="built_in">local</span>/bin/minikube</span><br></pre></td></tr></table></figure><h2 id="启动-minikube"><a href="#启动-minikube" class="headerlink" title="启动 minikube"></a>启动 minikube</h2><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube start --driver=docker</span><br></pre></td></tr></table></figure><p>第一次运行可能会提示该程序(minikube)没有是不安全的程序而阻止运行，这时候需要在 “系统偏好设置” -&gt; “安全与隐私” -&gt; “通用” 中完成同意运行的操作，选择”依然运行”。 然后再次在终端窗口中运行启动的命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube start --driver=<span class="string">"docker"</span> --memory=2048 --image-mirror-country=<span class="string">"cn"</span></span><br></pre></td></tr></table></figure><p>系统输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">😄  Darwin 12.0.1 (arm64) 上的 minikube v1.24.0</span><br><span class="line">✨  根据用户配置使用 docker 驱动程序</span><br><span class="line">✅  正在使用镜像存储库 registry.cn-hangzhou.aliyuncs.com/google_containers</span><br><span class="line">👍  Starting control plane node minikube <span class="keyword">in</span> cluster minikube</span><br><span class="line">🚜  Pulling base image ...</span><br><span class="line">🔥  Creating docker container (CPUs=2, Memory=2048MB) ...</span><br><span class="line">🐳  正在 Docker 20.10.8 中准备 Kubernetes v1.22.3…</span><br><span class="line">    ▪ Generating certificates and keys ...</span><br><span class="line">    ▪ Booting up control plane ...</span><br><span class="line">    ▪ Configuring RBAC rules ...</span><br><span class="line">🔎  Verifying Kubernetes components...</span><br><span class="line">    ▪ Using image registry.cn-hangzhou.aliyuncs.com/google_containers/storage-provisioner:v5</span><br><span class="line">🌟  Enabled addons: storage-provisioner, default-storageclass</span><br><span class="line">🏄  Done! kubectl is now configured to use <span class="string">"minikube"</span> cluster and <span class="string">"default"</span> namespace by default</span><br></pre></td></tr></table></figure><h2 id="检查minikube状态"><a href="#检查minikube状态" class="headerlink" title="检查minikube状态"></a>检查minikube状态</h2><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube status</span><br></pre></td></tr></table></figure><p>系统显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">minikube</span><br><span class="line"><span class="built_in">type</span>: Control Plane</span><br><span class="line">host: Running</span><br><span class="line">kubelet: Running</span><br><span class="line">apiserver: Running</span><br><span class="line">kubeconfig: Configured</span><br></pre></td></tr></table></figure><p>使用 docker images 和 docker ps 命令查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">REPOSITORY                                                    TAG                                                     IMAGE ID       CREATED        SIZE</span><br><span class="line">docker/desktop-kubernetes                                     kubernetes-v1.22.4-cni-v0.8.5-critools-v1.17.0-debian   84694ddaaffe   5 weeks ago    287MB</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CONTAINER ID   IMAGE                                                                 COMMAND                  CREATED          STATUS          PORTS                                                                                                                                  NAMES</span><br><span class="line">98ffccd83d9c   registry.cn-hangzhou.aliyuncs.com/google_containers/kicbase:v0.0.28   <span class="string">"/usr/local/bin/entr…"</span>   26 minutes ago   Up 26 minutes   127.0.0.1:61388-&gt;22/tcp, 127.0.0.1:61389-&gt;2376/tcp, 127.0.0.1:61391-&gt;5000/tcp, 127.0.0.1:61387-&gt;8443/tcp, 127.0.0.1:61390-&gt;32443/tcp   minikube</span><br></pre></td></tr></table></figure><p>可以看到，实际上 pull 一个名为 desktop-kubernetes 的进行并运行了对应的容器形成的 minikube 的实例。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们通常在本地开发环境安装 Minikube, 用来学习、体验 K8s 的基本功能，也用来模拟测试应用部署在 k8s 的情况。本文介绍如何在 Apple M1 电脑中安装 Minikube。&lt;/p&gt;
    
    </summary>
    
      <category term="microservice" scheme="https://www.mls-tech.info/categories/microservice/"/>
    
      <category term="Kubernetes" scheme="https://www.mls-tech.info/categories/microservice/kubernetes/"/>
    
    
      <category term="microservice" scheme="https://www.mls-tech.info/tags/microservice/"/>
    
      <category term="k8s" scheme="https://www.mls-tech.info/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>Scheduled Tasks in a Spring Boot Application</title>
    <link href="https://www.mls-tech.info/java/how-to-implement-scheduled-tasks-spring-boot/"/>
    <id>https://www.mls-tech.info/java/how-to-implement-scheduled-tasks-spring-boot/</id>
    <published>2022-01-28T03:17:31.000Z</published>
    <updated>2022-01-28T03:28:59.675Z</updated>
    
    <content type="html"><![CDATA[<p>In this article, we demostrate how to define the scheduled tasks in a Spring Boot Application.</p><a id="more"></a><h2 id="Why-you-need-scheduled-tasks-in-a-Spring-Boot-application"><a href="#Why-you-need-scheduled-tasks-in-a-Spring-Boot-application" class="headerlink" title="Why you need scheduled tasks in a Spring Boot application?"></a>Why you need scheduled tasks in a Spring Boot application?</h2><p>In enterprise applications, it is often necessary to add follow-up processing to web requests, or perform some timed tasks, such as: Scheduled cleaning of temporary tables, Scheduled summary of data, etc. Spring Boot provides good support for this type of task, and it is very convenient to develop.</p><p>In fact, Spring Boot provides at least two ways to perform scheduled tasks： One is to use @Async annotation, Another is to use @Scheduled annotation.</p><h2 id="Use-Async"><a href="#Use-Async" class="headerlink" title="Use @Async"></a>Use @Async</h2><p>To define a task that executes asynchronously, all you need to do is to add @Async to the method in the container-managed bean. The most common approach is to define a task as a container-managed bean, annotate it with @Component, and then annotate the method you want to execute with @Async:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncTask</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOG = LoggerFactory.getLogger(AsyncTask<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Async</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            LOG.info(<span class="string">"NO.&#123;&#125; message is: &#123;&#125;"</span>, i + <span class="number">1</span>,  message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Calls can then be made where appropriate, such as in business-layer code, which can be written as:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> AsyncTask asyncTask;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">asyncTask.sendMessage(<span class="string">"Hello"</span>);</span><br></pre></td></tr></table></figure><h2 id="Use-Scheduled"><a href="#Use-Scheduled" class="headerlink" title="Use @Scheduled"></a>Use @Scheduled</h2><p>Defines a container-managed Bean in which the method is defined as scheduled execution:</p><h3 id="Execution-at-fixed-intervals"><a href="#Execution-at-fixed-intervals" class="headerlink" title="Execution at fixed intervals"></a>Execution at fixed intervals</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BackupDBTask</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOG = LoggerFactory.getLogger(BackupDBTask<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Scheduled</span>(fixedDelay = <span class="number">1000</span>, initialDelay = <span class="number">1000</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">scheduleFixedRateWithInitialDelayTask</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> now = System.currentTimeMillis() / <span class="number">1000</span>;</span><br><span class="line">        LOG.info(<span class="string">"Execute: backup Database, time = &#123;&#125; "</span>, now);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Configure-timing-with-Cron-syntax"><a href="#Configure-timing-with-Cron-syntax" class="headerlink" title="Configure timing with Cron syntax"></a>Configure timing with Cron syntax</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BackupDBTask</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOG = LoggerFactory.getLogger(BackupDBTask<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Scheduled</span>(cron = <span class="string">"0 */1 * * * ?"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">scheduleTaskUsingCronExpression</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> now = System.currentTimeMillis() / <span class="number">1000</span>;</span><br><span class="line">        LOG.info(</span><br><span class="line">                <span class="string">"schedule tasks using cron jobs - Time = &#123;&#125;"</span>, now);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The above code is executed every minute.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In this article, we demostrate how to define the scheduled tasks in a Spring Boot Application.&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="https://www.mls-tech.info/categories/java/"/>
    
      <category term="SpringBoot" scheme="https://www.mls-tech.info/categories/java/springboot/"/>
    
    
      <category term="java" scheme="https://www.mls-tech.info/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>How to use the Hot Load in development of Spring Boot Application</title>
    <link href="https://www.mls-tech.info/java/howto-hot-load-in-development-spring-boot-application/"/>
    <id>https://www.mls-tech.info/java/howto-hot-load-in-development-spring-boot-application/</id>
    <published>2022-01-27T09:01:19.000Z</published>
    <updated>2022-01-27T11:31:25.245Z</updated>
    
    <content type="html"><![CDATA[<p>In the development of Spring Boot applications, if you do not want to restart the application repeatedly, you can use Spring Boot’s DevTools tool to implement the Hot Load function. This article show you how to use the Hot Load in IntelliJ IDEA.</p><a id="more"></a><h2 id="Add-Dependency"><a href="#Add-Dependency" class="headerlink" title="Add Dependency"></a>Add Dependency</h2><p>First, we need add the dependency - DevTools in Spring Boot Application.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>The <strong>optional</strong> option is to prevent devtools dependencies from being passed to other modules. When a developer packages an app and runs it, devtools is automatically disabled</p><p>The <strong>runtime</strong> option in scope - it set the dependency(package) only works at runtime, not when packaging (prevents the execution of the packaged program online, starts the file listening thread File Watcher, consumes a lot of memory resources)</p><h2 id="Launch-the-hot-load-feature-in-IntelliJ-IDEA"><a href="#Launch-the-hot-load-feature-in-IntelliJ-IDEA" class="headerlink" title="Launch the hot load feature in IntelliJ IDEA"></a>Launch the hot load feature in IntelliJ IDEA</h2><ol><li><p>Settings-compiler-make project automatically</p></li><li><p>ctrl+shift+alt+/ to activates the Registry dialog box (Mac OS activates the Registry dialog box by double-clicking the shift key)</p></li><li><p>In the second step of the dialog box, check compiler.automake.allow.when.app.running</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In the development of Spring Boot applications, if you do not want to restart the application repeatedly, you can use Spring Boot’s DevTools tool to implement the Hot Load function. This article show you how to use the Hot Load in IntelliJ IDEA.&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="https://www.mls-tech.info/categories/java/"/>
    
      <category term="SpringBoot" scheme="https://www.mls-tech.info/categories/java/springboot/"/>
    
    
      <category term="java" scheme="https://www.mls-tech.info/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>How to build Spring Boot WEB application with Freemarker (Update to Spring Boot 2.6 and Java 17)</title>
    <link href="https://www.mls-tech.info/java/howto-build-spring-boot-web-application-with-freemarker/"/>
    <id>https://www.mls-tech.info/java/howto-build-spring-boot-web-application-with-freemarker/</id>
    <published>2022-01-26T04:47:19.000Z</published>
    <updated>2022-01-26T07:38:04.137Z</updated>
    
    <content type="html"><![CDATA[<p>This article demonstrate: How to build a Spring Boot WEB applicaiton with Freemarker.</p><a id="more"></a><h2 id="Why-use-the-Freemarker-in-Spring-Boot-Web-Application"><a href="#Why-use-the-Freemarker-in-Spring-Boot-Web-Application" class="headerlink" title="Why use the Freemarker in Spring Boot Web Application"></a>Why use the Freemarker in Spring Boot Web Application</h2><p>As a relatively obsolete technology，By default, the Freemarker is not used as a template for web page rendering in Spring Boot 2, However, in the face of some old system upgrades written in Freemarker, you may also want to be able to configure support for Freemarker.</p><p>Next, let’s build a Spring Boot Web Application from scratch and then add support for Freemarker.</p><h2 id="Development-Environment"><a href="#Development-Environment" class="headerlink" title="Development Environment"></a>Development Environment</h2><p>In tutorial, we use the following softeware environment, and all softwares are free.</p><p>Java: JDK 17 Oracle JDK 17, download it from <a href="https://www.oracle.com/java/technologies/downloads/" rel="external nofollow noopener noreferrer" target="_blank">Offical Website</a></p><p>IDE: IntelliJ IDEA 2021.3.1 Community, download it from <a href="https://www.jetbrains.com/idea/download/#section=windows" rel="external nofollow noopener noreferrer" target="_blank">Offical Website</a></p><h2 id="Generate-a-Spring-Boot-Web-Application-Example"><a href="#Generate-a-Spring-Boot-Web-Application-Example" class="headerlink" title="Generate a Spring Boot Web Application Example"></a>Generate a Spring Boot Web Application Example</h2><p>In <a href="https://start.spring.io/" rel="external nofollow noopener noreferrer" target="_blank">Spring Boot Starter</a>, fill in the basic configuration information(Artifact: todo-restful-service) of the project and the third-party components that need to be used in the project.</p><p>In this turorail, we suggest to choose:</p><ul><li>‘Java’ as the language</li><li>‘Maven Project’ as the Project (type)</li><li>the version of Spring Boot chooses the latest stable version 2.6.3.</li><li>‘Jar’ as the package (type)</li><li>the version of Java choose Java 17</li></ul><p>And choose the following dependencies:</p><ul><li>Spring Web</li><li>Freemarker</li></ul><p>After completed the above steps, click the “Generate” button to download the generated project basic package. Unizip it and open it with IntelliJ IDEA IDE.</p><h2 id="Create-a-Spring-MVC-Controller"><a href="#Create-a-Spring-MVC-Controller" class="headerlink" title="Create a Spring MVC Controller"></a>Create a Spring MVC Controller</h2><p>In Spring Boot Web Application, each HTTP request can be configured to respond with a corresponding method in the Controller. In this case, we built a Controller to respond to the root path.</p><p>Create a new package named controller and create a new class in the package named IndexController, as follows:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>About the more information about spring mvc controller, you can refer the <a href="https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-controller" rel="external nofollow noopener noreferrer" target="_blank">Offical Documentation</a></p><h2 id="Create-a-Freemarker-page"><a href="#Create-a-Freemarker-page" class="headerlink" title="Create a Freemarker page"></a>Create a Freemarker page</h2><p>In src/main/template folder, create an new file, named: index.ftl. And fill the following content into it:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello Freemarker!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Hello Freemarker<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Configure-Freemarker-view"><a href="#Configure-Freemarker-view" class="headerlink" title="Configure Freemarker view"></a>Configure Freemarker view</h2><p>Rename the application.properties file in src/main/resources: application.yml, and add the following:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">freemarker:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">template-loader-paht:</span> <span class="string">classpath:/templates</span></span><br><span class="line">    <span class="attr">suffix:</span> <span class="string">.ftl</span></span><br></pre></td></tr></table></figure><h2 id="Run-Web-Application"><a href="#Run-Web-Application" class="headerlink" title="Run Web Application"></a>Run Web Application</h2><p>Run the Web Application</p><p>If you run it in console, you can execute:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn spring-boot:run</span><br></pre></td></tr></table></figure><p>If you use IDE tools, you can call maven in the IDE menu to run the application.</p><p>After the application is running, you can access the following URL via your browse.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080</span><br></pre></td></tr></table></figure><p>You can see something like this in your browser</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello Freemarker!</span><br></pre></td></tr></table></figure><h2 id="Download-the-Code"><a href="#Download-the-Code" class="headerlink" title="Download the Code"></a>Download the Code</h2><p>You can download the completed code from <a href="https://github.com/MaxM2013/spring-boot-web-application-example-with-freemarker" rel="external nofollow noopener noreferrer" target="_blank">GitHub</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This article demonstrate: How to build a Spring Boot WEB applicaiton with Freemarker.&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="https://www.mls-tech.info/categories/java/"/>
    
      <category term="SpringBoot" scheme="https://www.mls-tech.info/categories/java/springboot/"/>
    
    
      <category term="java" scheme="https://www.mls-tech.info/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>How to enable lombok annotations in IDEA IDE</title>
    <link href="https://www.mls-tech.info/java/howto-enable-lombok-annotations-in-idea/"/>
    <id>https://www.mls-tech.info/java/howto-enable-lombok-annotations-in-idea/</id>
    <published>2022-01-25T07:02:57.000Z</published>
    <updated>2022-01-25T07:04:26.977Z</updated>
    
    <content type="html"><![CDATA[<p>Lombok is a useful tool library for Java third-party libraries. Ideal for simplifying the writing of entity classes. A lot of get, set code, and constructors are omitted. However, in the IDEA Community version, Lombok recognition is not turned on by default, so it will always prompt an error when writing code in the IDE.</p><a id="more"></a><h2 id="Turn-on-annotation-processing-options"><a href="#Turn-on-annotation-processing-options" class="headerlink" title="Turn on annotation processing options"></a>Turn on annotation processing options</h2><p>In the IDEA menu, select File -&gt; Settings, and then select in the Settings window that pops up</p><p>“Build, Execution, Deployment” -&gt; Compiler -&gt; “Annotation Processors”, then tick “Enable Annotation Processing” on the right, as shown in the following figure:</p><p><img src="/images/java/spring/spring-idea-annation-process.png" alt="Enable Annotation Processing"></p><h2 id="Install-Lombok-Plugin"><a href="#Install-Lombok-Plugin" class="headerlink" title="Install Lombok Plugin"></a>Install Lombok Plugin</h2><p>In the Settings window just now, select Plugins, enter Lombok in “Search plugins in marketplace” to find it, display Lombok and click “Install” to install. As shown in the figure:</p><p><img src="/images/java/spring/spring-idea-annation-process-2.png" alt="Enable Annotation Processing"></p><p>Once the installation is complete, follow the prompts to restart IDEA.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Lombok is a useful tool library for Java third-party libraries. Ideal for simplifying the writing of entity classes. A lot of get, set code, and constructors are omitted. However, in the IDEA Community version, Lombok recognition is not turned on by default, so it will always prompt an error when writing code in the IDE.&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="https://www.mls-tech.info/categories/java/"/>
    
    
      <category term="java" scheme="https://www.mls-tech.info/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>How to build Restful Service with Spring Boot - A Step by Step Tutorial for Beginner - 1 (Update to Spring Boot 2.6 and Java 17)</title>
    <link href="https://www.mls-tech.info/java/howto-build-restful-service-with-spring-boot/"/>
    <id>https://www.mls-tech.info/java/howto-build-restful-service-with-spring-boot/</id>
    <published>2022-01-25T03:58:37.000Z</published>
    <updated>2022-01-25T11:41:28.112Z</updated>
    
    <content type="html"><![CDATA[<p>This is a step by step tutorail for beginner, you can learn how to use spring boot to build a restful service (api). And we also show you: how to connect DB with spring data, how to validate user input with hibernate validation, and how to document your api (restful service) with Swagger.</p><a id="more"></a><h2 id="Development-Environment"><a href="#Development-Environment" class="headerlink" title="Development Environment"></a>Development Environment</h2><p>In tutorial, we use the following softeware environment, and all softwares are free.</p><p>Java: JDK 17 Oracle JDK 17, download it from <a href="https://www.oracle.com/java/technologies/downloads/" rel="external nofollow noopener noreferrer" target="_blank">Offical Website</a></p><p>IDE: IntelliJ IDEA 2021.3.1 Community, download it from <a href="https://www.jetbrains.com/idea/download/#section=windows" rel="external nofollow noopener noreferrer" target="_blank">Offical Website</a></p><h2 id="Generate-Project-Skeleton"><a href="#Generate-Project-Skeleton" class="headerlink" title="Generate Project Skeleton"></a>Generate Project Skeleton</h2><p>In <a href="https://start.spring.io/" rel="external nofollow noopener noreferrer" target="_blank">Spring Boot Starter</a>, fill in the basic configuration information(Artifact: todo-restful-service) of the project and the third-party components that need to be used in the project.</p><p>In this turorail, we suggest to choose:</p><ul><li>‘Java’ as the language</li><li>‘Maven Project’ as the Project (type)</li><li>the version of Spring Boot chooses the latest stable version 2.6.2.</li><li>‘Jar’ as the package (type)</li><li>the version of Java choose Java 17</li></ul><p>And choose the following dependencies:</p><ul><li>Lombok</li><li>Spring Web</li><li>Spring Data JPA</li><li>H2 Database</li></ul><p>After completed the above steps, click the “Generate” button to download the generated project basic package.</p><p>We get a file named: todo-restful-service.zip, unzip it and use IDEA to open the project directory. Because there is a pom.xml file in the directory, IDEA can detect that this is a maven project and automatically download the dependencies packages.</p><p>Because the project is Maven project, we can see the project structure as following:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">todo-restful-service</span><br><span class="line">  + .mvn</span><br><span class="line">  + src</span><br><span class="line">    + main</span><br><span class="line">      + java</span><br><span class="line">      + resources</span><br><span class="line">    + <span class="built_in">test</span></span><br><span class="line">      + java</span><br><span class="line">  .gitignore</span><br><span class="line">  HELP.md</span><br><span class="line">  mvnw</span><br><span class="line">  mvnw.cmd</span><br><span class="line">  pom.xml</span><br></pre></td></tr></table></figure><p>In this tutorial, we foucs on the ‘src’ folder, because the code we will write or modify is stored in it.</p><h2 id="Create-the-first-RESTful-Service"><a href="#Create-the-first-RESTful-Service" class="headerlink" title="Create the first RESTful Service"></a>Create the first RESTful Service</h2><p>In Spring Boot, create an RESTful service is very simple:</p><ul><li>First, create a POJO Java class</li><li>Second, add two annotations(RestController, RequestMapping) for class</li><li>Define a common method that returns a string in the class and add annotation(GetMapping) for this method.</li></ul><p>The completed code as below:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OkApi</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">ok</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"ok"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Now, run the program and visit the address</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080</span><br></pre></td></tr></table></figure><p>then you can see the “ok” is display in browser.</p><h2 id="Add-a-Todo-Service"><a href="#Add-a-Todo-Service" class="headerlink" title="Add a Todo Service"></a>Add a Todo Service</h2><p>In this chapter, we create an new service: Todo. It is used to expose the ‘Todo’ resource.</p><p>First, let’s create a new ‘model’ package in the project, and then create a POJO Java class in it, named: Todo, add a few basic attributes to the class:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Todo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String desc;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In the class, we have neither written get, set methods nor constructors. Because we will use Lombok to generate these.</p><ol><li>If you need to generate get, set methods, add @Data annotations to the class definition</li><li>If you need to generate a constituent function, use the annotation of the corresponding constructor. In this example, we construct a constructor that includes all attributes, then add @AllArgsConstructor</li></ol><p>The completed code is as follows:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Todo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String desc;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Second, let’s create a new RESTful service class, named: TodoApi. It will return all Todo (Resources) lists. The code is as follows:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/todo"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TodoApi</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Todo&gt; <span class="title">getTodoList</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        List&lt;Todo&gt; todos = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        todos.add(<span class="keyword">new</span> Todo(<span class="number">1</span>, <span class="string">"Call Meeting"</span>, <span class="string">""</span>));</span><br><span class="line">        todos.add(<span class="keyword">new</span> Todo(<span class="number">2</span>, <span class="string">"Print file"</span>, <span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> todos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Here, we map the method to the URL “/todo” and construct Todo data for two examples. If the error “Todo does not specify the composition method” appears after joining this program, you can refer to <a href="/java/howto-enable-lombok-annotations-in-idea/" title="How to enable lombok annotations in IDEA IDE">How to enable lombok annotations in IDEA IDE</a> to solve</p><p>Now, run the program and visit the address</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost:8080/todo</span><br></pre></td></tr></table></figure><p>, you can see that the Todo list is assembled into a json data format and returned.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123;<span class="attr">"id"</span>:<span class="number">1</span>,<span class="attr">"title"</span>:<span class="string">"Call Metting"</span>,<span class="attr">"desc"</span>:<span class="string">""</span>&#125;,&#123;<span class="attr">"id"</span>:<span class="number">2</span>,<span class="attr">"title"</span>:<span class="string">"Print File"</span>,<span class="attr">"desc"</span>:<span class="string">""</span>&#125;]</span><br></pre></td></tr></table></figure><h2 id="Next-Step"><a href="#Next-Step" class="headerlink" title="Next Step"></a>Next Step</h2><p>In next post, we will add database functionality to the application.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is a step by step tutorail for beginner, you can learn how to use spring boot to build a restful service (api). And we also show you: how to connect DB with spring data, how to validate user input with hibernate validation, and how to document your api (restful service) with Swagger.&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="https://www.mls-tech.info/categories/java/"/>
    
      <category term="SpringBoot" scheme="https://www.mls-tech.info/categories/java/springboot/"/>
    
    
      <category term="java" scheme="https://www.mls-tech.info/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>How to skip the test when maven builds</title>
    <link href="https://www.mls-tech.info/java/howto-skip-test-maven-build/"/>
    <id>https://www.mls-tech.info/java/howto-skip-test-maven-build/</id>
    <published>2022-01-24T11:51:45.000Z</published>
    <updated>2022-01-24T11:55:33.655Z</updated>
    
    <content type="html"><![CDATA[<p>Maven is the most popular project building tool for the Java platform, and the test-driven development (TDD) is also the development method chosen by many teams in Java platform project development. But when building a project with maven, if for some reason, we want not to perform unit tests in this build. So what to do?</p><a id="more"></a><h2 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h2><p>There are two command-line arguments that help us prevent maven from performing unit tests while building the project:</p><ol><li>skipTests, such as:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn -DskipTests build</span><br></pre></td></tr></table></figure><ol start="2"><li>maven.test.skip=true， such as:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn -Dmaven.test.skip=<span class="literal">true</span> build</span><br></pre></td></tr></table></figure><h2 id="The-difference-between-the-two-parameters"><a href="#The-difference-between-the-two-parameters" class="headerlink" title="The difference between the two parameters"></a>The difference between the two parameters</h2><p>-DskipTests，The test case is not executed, but the test case class is compiled to generate the corresponding class file under target/test-classes.</p><p>-Dmaven.test.skip=true，Test cases are not executed, and test case classes are not compiled.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Maven is the most popular project building tool for the Java platform, and the test-driven development (TDD) is also the development method chosen by many teams in Java platform project development. But when building a project with maven, if for some reason, we want not to perform unit tests in this build. So what to do?&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="https://www.mls-tech.info/categories/java/"/>
    
    
      <category term="java" scheme="https://www.mls-tech.info/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>SwiftUI Widget - ZStack</title>
    <link href="https://www.mls-tech.info/app/swift/swiftui-widget-zstack/"/>
    <id>https://www.mls-tech.info/app/swift/swiftui-widget-zstack/</id>
    <published>2022-01-23T04:13:31.000Z</published>
    <updated>2022-01-23T05:58:20.064Z</updated>
    
    <content type="html"><![CDATA[<p>The function of ZStack is to layer the widget on top of each other. Widget stacked on top cover the visible portion of the widget stacked below and those widgets can be aligned in both axes.</p><a id="more"></a><h2 id="How-to-layer-a-text-on-a-shape"><a href="#How-to-layer-a-text-on-a-shape" class="headerlink" title="How to layer a text on a shape"></a>How to layer a text on a shape</h2><p>Let’s look at a code snippet</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ZStackView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="type">ZStack</span>() &#123;</span><br><span class="line">            <span class="type">Circle</span>()</span><br><span class="line">            .frame(width: <span class="number">100</span>, height: <span class="number">100</span>)</span><br><span class="line">                                  .foregroundColor(.green)</span><br><span class="line"></span><br><span class="line">            <span class="type">Text</span>(<span class="string">"Hello"</span>)</span><br><span class="line">                .foregroundColor(.white)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In this example, we layer a Text - ‘Hello’ on a Circle. Becuase the default alignment is center, you can see the Text in center of the Circle.</p><h2 id="How-to-align-those-widgets-in-ZStack"><a href="#How-to-align-those-widgets-in-ZStack" class="headerlink" title="How to align those widgets in ZStack"></a>How to align those widgets in ZStack</h2><p>You can use the ‘alignment’ property to do it. such as:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ZStackView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="type">ZStack</span>(alignment: .bottomLeading) &#123;</span><br><span class="line">            <span class="type">Circle</span>()</span><br><span class="line">            .frame(width: <span class="number">100</span>, height: <span class="number">100</span>)</span><br><span class="line">                                  .foregroundColor(.green)</span><br><span class="line"></span><br><span class="line">            <span class="type">Text</span>(<span class="string">"Hello"</span>)</span><br><span class="line">                .foregroundColor(.white)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This will align both widgets to the lower-left corner. We didn’t set the frame for the entire ZStack, ZStack will use the frame of the circle, So we can only see that text is aligned.</p><p>To see the both widgets(Circle and Text) are aligned. We change the code as:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ZStackView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="type">ZStack</span>(alignment: .bottomLeading) &#123;</span><br><span class="line">            <span class="type">Circle</span>()</span><br><span class="line">            .frame(width: <span class="number">100</span>, height: <span class="number">100</span>)</span><br><span class="line">                                  .foregroundColor(.green)</span><br><span class="line"></span><br><span class="line">            <span class="type">Text</span>(<span class="string">"Hello"</span>)</span><br><span class="line">                .foregroundColor(.white)</span><br><span class="line">        &#125;</span><br><span class="line">        .frame(width: <span class="number">300</span>, height: <span class="number">300</span>, alignment: .bottomLeading)</span><br><span class="line">        .background(<span class="type">Color</span>.gray)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Now you can see the both widgets are aligned to bottom left corner.</p><p>About more detail of ZStack widget, you can see the <a href="https://developer.apple.com/documentation/swiftui/zstack" rel="external nofollow noopener noreferrer" target="_blank">Official Documentation</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The function of ZStack is to layer the widget on top of each other. Widget stacked on top cover the visible portion of the widget stacked below and those widgets can be aligned in both axes.&lt;/p&gt;
    
    </summary>
    
      <category term="App Development" scheme="https://www.mls-tech.info/categories/app/"/>
    
      <category term="Swift" scheme="https://www.mls-tech.info/categories/app/swift/"/>
    
    
      <category term="移动开发" scheme="https://www.mls-tech.info/tags/app/"/>
    
      <category term="Swift" scheme="https://www.mls-tech.info/tags/swift/"/>
    
  </entry>
  
</feed>
